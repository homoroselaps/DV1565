Nonterminals useless in grammar

   __args


Terminals unused in grammar

   ANY
   NL
   BLK


State 20 conflicts: 1 reduce/reduce
State 34 conflicts: 1 shift/reduce
State 85 conflicts: 10 shift/reduce


Grammar

    0 $accept: chunk "end of file"

    1 chunk: __stat
    2      | __stat laststat _semi

    3 __stat: %empty
    4       | __stat stat _semi

    5 _semi: %empty
    6      | ';'

    7 laststat: RETURN explist
    8         | RETURN
    9         | BREAK

   10 block: chunk

   11 stat: varlist '=' explist
   12     | DO block END
   13     | WHILE exp DO block END
   14     | REPEAT block UNTIL exp
   15     | IF exp THEN block __elseif END
   16     | IF exp THEN block __elseif ELSE block END
   17     | FOR NAME '=' exp ',' exp DO block END
   18     | FOR NAME '=' exp ',' exp ',' exp DO block END
   19     | FOR namelist IN explist DO block END
   20     | FUNCTION funcname funcbody
   21     | LOCAL FUNCTION NAME funcbody
   22     | LOCAL namelist
   23     | LOCAL namelist '=' explist

   24 __elseif: %empty
   25         | __elseif ELSEIF exp THEN block

   26 varlist: var
   27        | varlist ',' var

   28 funcname: NAME __dotname
   29         | NAME __dotname ':' NAME

   30 __dotname: %empty
   31          | __dotname '.' NAME

   32 var: NAME
   33    | prefixexp '[' exp ']'
   34    | prefixexp '.' NAME

   35 namelist: NAME
   36         | namelist ',' NAME

   37 explist: exp
   38        | explist ',' exp

   39 exp: NIL
   40    | FALSE
   41    | TRUE
   42    | NUMBER
   43    | STRING
   44    | DDDOT
   45    | function
   46    | prefixexp
   47    | tableconstructor
   48    | binopexp
   49    | unop exp

   50 prefixexp: var
   51          | functioncall
   52          | '(' exp ')'

   53 stat: functioncall

   54 functioncall: prefixexp args
   55             | prefixexp ':' NAME args

   56 args: '(' ')'
   57     | '(' explist ')'
   58     | tableconstructor
   59     | STRING

   60 function: FUNCTION funcbody

   61 funcbody: '(' ')' block END
   62         | '(' parlist ')' block END

   63 parlist: namelist
   64        | namelist ',' DDDOT
   65        | DDDOT

   66 tableconstructor: '{' '}'
   67                 | '{' fieldlist '}'

   68 fieldlist: field __fieldsepfield
   69          | field __fieldsepfield fieldsep

   70 __fieldsepfield: %empty
   71                | __fieldsepfield fieldsep field

   72 field: '[' exp ']' '=' exp
   73      | NAME '=' exp
   74      | exp

   75 fieldsep: ','
   76         | ';'

   77 binopexp: exp '+' exp
   78         | exp '-' exp
   79         | exp '*' exp
   80         | exp '/' exp
   81         | exp '^' exp
   82         | exp '%' exp
   83         | exp CONCAT exp
   84         | exp COMP exp
   85         | exp AND exp
   86         | exp OR exp

   87 unop: '-'
   88     | NOT
   89     | LENGTH


Terminals, with rules where they appear

"end of file" (0) 0
'%' (37) 82
'(' (40) 52 56 57 61 62
')' (41) 52 56 57 61 62
'*' (42) 79
'+' (43) 77
',' (44) 17 18 27 36 38 64 75
'-' (45) 78 87
'.' (46) 31 34
'/' (47) 80
':' (58) 29 55
';' (59) 6 76
'=' (61) 11 17 18 23 72 73
'[' (91) 33 72
']' (93) 33 72
'^' (94) 81
'{' (123) 66 67
'}' (125) 66 67
error (256)
IF (258) 15 16
THEN (259) 15 16 25
ELSEIF (260) 25
ELSE (261) 16
END (262) 12 13 15 16 17 18 19 61 62
FOR (263) 17 18 19
DO (264) 12 13 17 18 19
REPEAT (265) 14
UNTIL (266) 14
BREAK (267) 9
IN (268) 19
WHILE (269) 13
LOCAL (270) 21 22 23
ANY (271)
LENGTH (272) 89
NOT (273) 88
RETURN (274) 7 8
OR (275) 86
AND (276) 85
COMP (277) 84
CONCAT (278) 83
NIL (279) 39
FALSE (280) 40
TRUE (281) 41
NUMBER (282) 42
STRING (283) 43 59
NAME (284) 17 18 21 28 29 31 32 34 35 36 55 73
NL (285)
BLK (286)
FUNCTION (287) 20 21 60
DDDOT (288) 44 64 65


Nonterminals, with rules where they appear

$accept (51)
    on left: 0
chunk (52)
    on left: 1 2, on right: 0 10
__stat (53)
    on left: 3 4, on right: 1 2 4
_semi (54)
    on left: 5 6, on right: 2 4
laststat (55)
    on left: 7 8 9, on right: 2
block (56)
    on left: 10, on right: 12 13 14 15 16 17 18 19 25 61 62
stat (57)
    on left: 11 12 13 14 15 16 17 18 19 20 21 22 23 53, on right: 4
__elseif (58)
    on left: 24 25, on right: 15 16 25
varlist (59)
    on left: 26 27, on right: 11 27
funcname (60)
    on left: 28 29, on right: 20
__dotname (61)
    on left: 30 31, on right: 28 29 31
var (62)
    on left: 32 33 34, on right: 26 27 50
namelist (63)
    on left: 35 36, on right: 19 22 23 36 63 64
explist (64)
    on left: 37 38, on right: 7 11 19 23 38 57
exp (65)
    on left: 39 40 41 42 43 44 45 46 47 48 49, on right: 13 14 15 16
    17 18 25 33 37 38 49 52 72 73 74 77 78 79 80 81 82 83 84 85 86
prefixexp (66)
    on left: 50 51 52, on right: 33 34 46 54 55
functioncall (67)
    on left: 54 55, on right: 51 53
args (68)
    on left: 56 57 58 59, on right: 54 55
function (69)
    on left: 60, on right: 45
funcbody (70)
    on left: 61 62, on right: 20 21 60
parlist (71)
    on left: 63 64 65, on right: 62
tableconstructor (72)
    on left: 66 67, on right: 47 58
fieldlist (73)
    on left: 68 69, on right: 67
__fieldsepfield (74)
    on left: 70 71, on right: 68 69 71
field (75)
    on left: 72 73 74, on right: 68 69 71
fieldsep (76)
    on left: 75 76, on right: 69 71
binopexp (77)
    on left: 77 78 79 80 81 82 83 84 85 86, on right: 48
unop (78)
    on left: 87 88 89, on right: 49


State 0

    0 $accept: . chunk "end of file"

    $default  reduce using rule 3 (__stat)

    chunk   go to state 1
    __stat  go to state 2


State 1

    0 $accept: chunk . "end of file"

    "end of file"  shift, and go to state 3


State 2

    1 chunk: __stat .
    2      | __stat . laststat _semi
    4 __stat: __stat . stat _semi

    IF        shift, and go to state 4
    FOR       shift, and go to state 5
    DO        shift, and go to state 6
    REPEAT    shift, and go to state 7
    BREAK     shift, and go to state 8
    WHILE     shift, and go to state 9
    LOCAL     shift, and go to state 10
    RETURN    shift, and go to state 11
    NAME      shift, and go to state 12
    FUNCTION  shift, and go to state 13
    '('       shift, and go to state 14

    $default  reduce using rule 1 (chunk)

    laststat      go to state 15
    stat          go to state 16
    varlist       go to state 17
    var           go to state 18
    prefixexp     go to state 19
    functioncall  go to state 20


State 3

    0 $accept: chunk "end of file" .

    $default  accept


State 4

   15 stat: IF . exp THEN block __elseif END
   16     | IF . exp THEN block __elseif ELSE block END

    LENGTH    shift, and go to state 21
    NOT       shift, and go to state 22
    '-'       shift, and go to state 23
    NIL       shift, and go to state 24
    FALSE     shift, and go to state 25
    TRUE      shift, and go to state 26
    NUMBER    shift, and go to state 27
    STRING    shift, and go to state 28
    NAME      shift, and go to state 12
    FUNCTION  shift, and go to state 29
    DDDOT     shift, and go to state 30
    '('       shift, and go to state 14
    '{'       shift, and go to state 31

    var               go to state 32
    exp               go to state 33
    prefixexp         go to state 34
    functioncall      go to state 35
    function          go to state 36
    tableconstructor  go to state 37
    binopexp          go to state 38
    unop              go to state 39


State 5

   17 stat: FOR . NAME '=' exp ',' exp DO block END
   18     | FOR . NAME '=' exp ',' exp ',' exp DO block END
   19     | FOR . namelist IN explist DO block END

    NAME  shift, and go to state 40

    namelist  go to state 41


State 6

   12 stat: DO . block END

    $default  reduce using rule 3 (__stat)

    chunk   go to state 42
    __stat  go to state 2
    block   go to state 43


State 7

   14 stat: REPEAT . block UNTIL exp

    $default  reduce using rule 3 (__stat)

    chunk   go to state 42
    __stat  go to state 2
    block   go to state 44


State 8

    9 laststat: BREAK .

    $default  reduce using rule 9 (laststat)


State 9

   13 stat: WHILE . exp DO block END

    LENGTH    shift, and go to state 21
    NOT       shift, and go to state 22
    '-'       shift, and go to state 23
    NIL       shift, and go to state 24
    FALSE     shift, and go to state 25
    TRUE      shift, and go to state 26
    NUMBER    shift, and go to state 27
    STRING    shift, and go to state 28
    NAME      shift, and go to state 12
    FUNCTION  shift, and go to state 29
    DDDOT     shift, and go to state 30
    '('       shift, and go to state 14
    '{'       shift, and go to state 31

    var               go to state 32
    exp               go to state 45
    prefixexp         go to state 34
    functioncall      go to state 35
    function          go to state 36
    tableconstructor  go to state 37
    binopexp          go to state 38
    unop              go to state 39


State 10

   21 stat: LOCAL . FUNCTION NAME funcbody
   22     | LOCAL . namelist
   23     | LOCAL . namelist '=' explist

    NAME      shift, and go to state 46
    FUNCTION  shift, and go to state 47

    namelist  go to state 48


State 11

    7 laststat: RETURN . explist
    8         | RETURN .

    LENGTH    shift, and go to state 21
    NOT       shift, and go to state 22
    '-'       shift, and go to state 23
    NIL       shift, and go to state 24
    FALSE     shift, and go to state 25
    TRUE      shift, and go to state 26
    NUMBER    shift, and go to state 27
    STRING    shift, and go to state 28
    NAME      shift, and go to state 12
    FUNCTION  shift, and go to state 29
    DDDOT     shift, and go to state 30
    '('       shift, and go to state 14
    '{'       shift, and go to state 31

    $default  reduce using rule 8 (laststat)

    var               go to state 32
    explist           go to state 49
    exp               go to state 50
    prefixexp         go to state 34
    functioncall      go to state 35
    function          go to state 36
    tableconstructor  go to state 37
    binopexp          go to state 38
    unop              go to state 39


State 12

   32 var: NAME .

    $default  reduce using rule 32 (var)


State 13

   20 stat: FUNCTION . funcname funcbody

    NAME  shift, and go to state 51

    funcname  go to state 52


State 14

   52 prefixexp: '(' . exp ')'

    LENGTH    shift, and go to state 21
    NOT       shift, and go to state 22
    '-'       shift, and go to state 23
    NIL       shift, and go to state 24
    FALSE     shift, and go to state 25
    TRUE      shift, and go to state 26
    NUMBER    shift, and go to state 27
    STRING    shift, and go to state 28
    NAME      shift, and go to state 12
    FUNCTION  shift, and go to state 29
    DDDOT     shift, and go to state 30
    '('       shift, and go to state 14
    '{'       shift, and go to state 31

    var               go to state 32
    exp               go to state 53
    prefixexp         go to state 34
    functioncall      go to state 35
    function          go to state 36
    tableconstructor  go to state 37
    binopexp          go to state 38
    unop              go to state 39


State 15

    2 chunk: __stat laststat . _semi

    ';'  shift, and go to state 54

    $default  reduce using rule 5 (_semi)

    _semi  go to state 55


State 16

    4 __stat: __stat stat . _semi

    ';'  shift, and go to state 54

    $default  reduce using rule 5 (_semi)

    _semi  go to state 56


State 17

   11 stat: varlist . '=' explist
   27 varlist: varlist . ',' var

    '='  shift, and go to state 57
    ','  shift, and go to state 58


State 18

   26 varlist: var .
   50 prefixexp: var .

    '='       reduce using rule 26 (varlist)
    ','       reduce using rule 26 (varlist)
    $default  reduce using rule 50 (prefixexp)


State 19

   33 var: prefixexp . '[' exp ']'
   34    | prefixexp . '.' NAME
   54 functioncall: prefixexp . args
   55             | prefixexp . ':' NAME args

    STRING  shift, and go to state 59
    ':'     shift, and go to state 60
    '.'     shift, and go to state 61
    '['     shift, and go to state 62
    '('     shift, and go to state 63
    '{'     shift, and go to state 31

    args              go to state 64
    tableconstructor  go to state 65


State 20

   51 prefixexp: functioncall .
   53 stat: functioncall .

    STRING    reduce using rule 51 (prefixexp)
    ':'       reduce using rule 51 (prefixexp)
    '.'       reduce using rule 51 (prefixexp)
    '['       reduce using rule 51 (prefixexp)
    '('       reduce using rule 51 (prefixexp)
    '('       [reduce using rule 53 (stat)]
    '{'       reduce using rule 51 (prefixexp)
    $default  reduce using rule 53 (stat)


State 21

   89 unop: LENGTH .

    $default  reduce using rule 89 (unop)


State 22

   88 unop: NOT .

    $default  reduce using rule 88 (unop)


State 23

   87 unop: '-' .

    $default  reduce using rule 87 (unop)


State 24

   39 exp: NIL .

    $default  reduce using rule 39 (exp)


State 25

   40 exp: FALSE .

    $default  reduce using rule 40 (exp)


State 26

   41 exp: TRUE .

    $default  reduce using rule 41 (exp)


State 27

   42 exp: NUMBER .

    $default  reduce using rule 42 (exp)


State 28

   43 exp: STRING .

    $default  reduce using rule 43 (exp)


State 29

   60 function: FUNCTION . funcbody

    '('  shift, and go to state 66

    funcbody  go to state 67


State 30

   44 exp: DDDOT .

    $default  reduce using rule 44 (exp)


State 31

   66 tableconstructor: '{' . '}'
   67                 | '{' . fieldlist '}'

    LENGTH    shift, and go to state 21
    NOT       shift, and go to state 22
    '-'       shift, and go to state 23
    NIL       shift, and go to state 24
    FALSE     shift, and go to state 25
    TRUE      shift, and go to state 26
    NUMBER    shift, and go to state 27
    STRING    shift, and go to state 28
    NAME      shift, and go to state 68
    FUNCTION  shift, and go to state 29
    DDDOT     shift, and go to state 30
    '['       shift, and go to state 69
    '('       shift, and go to state 14
    '{'       shift, and go to state 31
    '}'       shift, and go to state 70

    var               go to state 32
    exp               go to state 71
    prefixexp         go to state 34
    functioncall      go to state 35
    function          go to state 36
    tableconstructor  go to state 37
    fieldlist         go to state 72
    field             go to state 73
    binopexp          go to state 38
    unop              go to state 39


State 32

   50 prefixexp: var .

    $default  reduce using rule 50 (prefixexp)


State 33

   15 stat: IF exp . THEN block __elseif END
   16     | IF exp . THEN block __elseif ELSE block END
   77 binopexp: exp . '+' exp
   78         | exp . '-' exp
   79         | exp . '*' exp
   80         | exp . '/' exp
   81         | exp . '^' exp
   82         | exp . '%' exp
   83         | exp . CONCAT exp
   84         | exp . COMP exp
   85         | exp . AND exp
   86         | exp . OR exp

    THEN    shift, and go to state 74
    OR      shift, and go to state 75
    AND     shift, and go to state 76
    COMP    shift, and go to state 77
    CONCAT  shift, and go to state 78
    '+'     shift, and go to state 79
    '-'     shift, and go to state 80
    '*'     shift, and go to state 81
    '%'     shift, and go to state 82
    '/'     shift, and go to state 83
    '^'     shift, and go to state 84


State 34

   33 var: prefixexp . '[' exp ']'
   34    | prefixexp . '.' NAME
   46 exp: prefixexp .
   54 functioncall: prefixexp . args
   55             | prefixexp . ':' NAME args

    STRING  shift, and go to state 59
    ':'     shift, and go to state 60
    '.'     shift, and go to state 61
    '['     shift, and go to state 62
    '('     shift, and go to state 63
    '{'     shift, and go to state 31

    '('       [reduce using rule 46 (exp)]
    $default  reduce using rule 46 (exp)

    args              go to state 64
    tableconstructor  go to state 65


State 35

   51 prefixexp: functioncall .

    $default  reduce using rule 51 (prefixexp)


State 36

   45 exp: function .

    $default  reduce using rule 45 (exp)


State 37

   47 exp: tableconstructor .

    $default  reduce using rule 47 (exp)


State 38

   48 exp: binopexp .

    $default  reduce using rule 48 (exp)


State 39

   49 exp: unop . exp

    LENGTH    shift, and go to state 21
    NOT       shift, and go to state 22
    '-'       shift, and go to state 23
    NIL       shift, and go to state 24
    FALSE     shift, and go to state 25
    TRUE      shift, and go to state 26
    NUMBER    shift, and go to state 27
    STRING    shift, and go to state 28
    NAME      shift, and go to state 12
    FUNCTION  shift, and go to state 29
    DDDOT     shift, and go to state 30
    '('       shift, and go to state 14
    '{'       shift, and go to state 31

    var               go to state 32
    exp               go to state 85
    prefixexp         go to state 34
    functioncall      go to state 35
    function          go to state 36
    tableconstructor  go to state 37
    binopexp          go to state 38
    unop              go to state 39


State 40

   17 stat: FOR NAME . '=' exp ',' exp DO block END
   18     | FOR NAME . '=' exp ',' exp ',' exp DO block END
   35 namelist: NAME .

    '='  shift, and go to state 86

    $default  reduce using rule 35 (namelist)


State 41

   19 stat: FOR namelist . IN explist DO block END
   36 namelist: namelist . ',' NAME

    IN   shift, and go to state 87
    ','  shift, and go to state 88


State 42

   10 block: chunk .

    $default  reduce using rule 10 (block)


State 43

   12 stat: DO block . END

    END  shift, and go to state 89


State 44

   14 stat: REPEAT block . UNTIL exp

    UNTIL  shift, and go to state 90


State 45

   13 stat: WHILE exp . DO block END
   77 binopexp: exp . '+' exp
   78         | exp . '-' exp
   79         | exp . '*' exp
   80         | exp . '/' exp
   81         | exp . '^' exp
   82         | exp . '%' exp
   83         | exp . CONCAT exp
   84         | exp . COMP exp
   85         | exp . AND exp
   86         | exp . OR exp

    DO      shift, and go to state 91
    OR      shift, and go to state 75
    AND     shift, and go to state 76
    COMP    shift, and go to state 77
    CONCAT  shift, and go to state 78
    '+'     shift, and go to state 79
    '-'     shift, and go to state 80
    '*'     shift, and go to state 81
    '%'     shift, and go to state 82
    '/'     shift, and go to state 83
    '^'     shift, and go to state 84


State 46

   35 namelist: NAME .

    $default  reduce using rule 35 (namelist)


State 47

   21 stat: LOCAL FUNCTION . NAME funcbody

    NAME  shift, and go to state 92


State 48

   22 stat: LOCAL namelist .
   23     | LOCAL namelist . '=' explist
   36 namelist: namelist . ',' NAME

    '='  shift, and go to state 93
    ','  shift, and go to state 88

    $default  reduce using rule 22 (stat)


State 49

    7 laststat: RETURN explist .
   38 explist: explist . ',' exp

    ','  shift, and go to state 94

    $default  reduce using rule 7 (laststat)


State 50

   37 explist: exp .
   77 binopexp: exp . '+' exp
   78         | exp . '-' exp
   79         | exp . '*' exp
   80         | exp . '/' exp
   81         | exp . '^' exp
   82         | exp . '%' exp
   83         | exp . CONCAT exp
   84         | exp . COMP exp
   85         | exp . AND exp
   86         | exp . OR exp

    OR      shift, and go to state 75
    AND     shift, and go to state 76
    COMP    shift, and go to state 77
    CONCAT  shift, and go to state 78
    '+'     shift, and go to state 79
    '-'     shift, and go to state 80
    '*'     shift, and go to state 81
    '%'     shift, and go to state 82
    '/'     shift, and go to state 83
    '^'     shift, and go to state 84

    $default  reduce using rule 37 (explist)


State 51

   28 funcname: NAME . __dotname
   29         | NAME . __dotname ':' NAME

    $default  reduce using rule 30 (__dotname)

    __dotname  go to state 95


State 52

   20 stat: FUNCTION funcname . funcbody

    '('  shift, and go to state 66

    funcbody  go to state 96


State 53

   52 prefixexp: '(' exp . ')'
   77 binopexp: exp . '+' exp
   78         | exp . '-' exp
   79         | exp . '*' exp
   80         | exp . '/' exp
   81         | exp . '^' exp
   82         | exp . '%' exp
   83         | exp . CONCAT exp
   84         | exp . COMP exp
   85         | exp . AND exp
   86         | exp . OR exp

    OR      shift, and go to state 75
    AND     shift, and go to state 76
    COMP    shift, and go to state 77
    CONCAT  shift, and go to state 78
    '+'     shift, and go to state 79
    '-'     shift, and go to state 80
    '*'     shift, and go to state 81
    '%'     shift, and go to state 82
    '/'     shift, and go to state 83
    '^'     shift, and go to state 84
    ')'     shift, and go to state 97


State 54

    6 _semi: ';' .

    $default  reduce using rule 6 (_semi)


State 55

    2 chunk: __stat laststat _semi .

    $default  reduce using rule 2 (chunk)


State 56

    4 __stat: __stat stat _semi .

    $default  reduce using rule 4 (__stat)


State 57

   11 stat: varlist '=' . explist

    LENGTH    shift, and go to state 21
    NOT       shift, and go to state 22
    '-'       shift, and go to state 23
    NIL       shift, and go to state 24
    FALSE     shift, and go to state 25
    TRUE      shift, and go to state 26
    NUMBER    shift, and go to state 27
    STRING    shift, and go to state 28
    NAME      shift, and go to state 12
    FUNCTION  shift, and go to state 29
    DDDOT     shift, and go to state 30
    '('       shift, and go to state 14
    '{'       shift, and go to state 31

    var               go to state 32
    explist           go to state 98
    exp               go to state 50
    prefixexp         go to state 34
    functioncall      go to state 35
    function          go to state 36
    tableconstructor  go to state 37
    binopexp          go to state 38
    unop              go to state 39


State 58

   27 varlist: varlist ',' . var

    NAME  shift, and go to state 12
    '('   shift, and go to state 14

    var           go to state 99
    prefixexp     go to state 19
    functioncall  go to state 35


State 59

   59 args: STRING .

    $default  reduce using rule 59 (args)


State 60

   55 functioncall: prefixexp ':' . NAME args

    NAME  shift, and go to state 100


State 61

   34 var: prefixexp '.' . NAME

    NAME  shift, and go to state 101


State 62

   33 var: prefixexp '[' . exp ']'

    LENGTH    shift, and go to state 21
    NOT       shift, and go to state 22
    '-'       shift, and go to state 23
    NIL       shift, and go to state 24
    FALSE     shift, and go to state 25
    TRUE      shift, and go to state 26
    NUMBER    shift, and go to state 27
    STRING    shift, and go to state 28
    NAME      shift, and go to state 12
    FUNCTION  shift, and go to state 29
    DDDOT     shift, and go to state 30
    '('       shift, and go to state 14
    '{'       shift, and go to state 31

    var               go to state 32
    exp               go to state 102
    prefixexp         go to state 34
    functioncall      go to state 35
    function          go to state 36
    tableconstructor  go to state 37
    binopexp          go to state 38
    unop              go to state 39


State 63

   56 args: '(' . ')'
   57     | '(' . explist ')'

    LENGTH    shift, and go to state 21
    NOT       shift, and go to state 22
    '-'       shift, and go to state 23
    NIL       shift, and go to state 24
    FALSE     shift, and go to state 25
    TRUE      shift, and go to state 26
    NUMBER    shift, and go to state 27
    STRING    shift, and go to state 28
    NAME      shift, and go to state 12
    FUNCTION  shift, and go to state 29
    DDDOT     shift, and go to state 30
    '('       shift, and go to state 14
    ')'       shift, and go to state 103
    '{'       shift, and go to state 31

    var               go to state 32
    explist           go to state 104
    exp               go to state 50
    prefixexp         go to state 34
    functioncall      go to state 35
    function          go to state 36
    tableconstructor  go to state 37
    binopexp          go to state 38
    unop              go to state 39


State 64

   54 functioncall: prefixexp args .

    $default  reduce using rule 54 (functioncall)


State 65

   58 args: tableconstructor .

    $default  reduce using rule 58 (args)


State 66

   61 funcbody: '(' . ')' block END
   62         | '(' . parlist ')' block END

    NAME   shift, and go to state 46
    DDDOT  shift, and go to state 105
    ')'    shift, and go to state 106

    namelist  go to state 107
    parlist   go to state 108


State 67

   60 function: FUNCTION funcbody .

    $default  reduce using rule 60 (function)


State 68

   32 var: NAME .
   73 field: NAME . '=' exp

    '='  shift, and go to state 109

    $default  reduce using rule 32 (var)


State 69

   72 field: '[' . exp ']' '=' exp

    LENGTH    shift, and go to state 21
    NOT       shift, and go to state 22
    '-'       shift, and go to state 23
    NIL       shift, and go to state 24
    FALSE     shift, and go to state 25
    TRUE      shift, and go to state 26
    NUMBER    shift, and go to state 27
    STRING    shift, and go to state 28
    NAME      shift, and go to state 12
    FUNCTION  shift, and go to state 29
    DDDOT     shift, and go to state 30
    '('       shift, and go to state 14
    '{'       shift, and go to state 31

    var               go to state 32
    exp               go to state 110
    prefixexp         go to state 34
    functioncall      go to state 35
    function          go to state 36
    tableconstructor  go to state 37
    binopexp          go to state 38
    unop              go to state 39


State 70

   66 tableconstructor: '{' '}' .

    $default  reduce using rule 66 (tableconstructor)


State 71

   74 field: exp .
   77 binopexp: exp . '+' exp
   78         | exp . '-' exp
   79         | exp . '*' exp
   80         | exp . '/' exp
   81         | exp . '^' exp
   82         | exp . '%' exp
   83         | exp . CONCAT exp
   84         | exp . COMP exp
   85         | exp . AND exp
   86         | exp . OR exp

    OR      shift, and go to state 75
    AND     shift, and go to state 76
    COMP    shift, and go to state 77
    CONCAT  shift, and go to state 78
    '+'     shift, and go to state 79
    '-'     shift, and go to state 80
    '*'     shift, and go to state 81
    '%'     shift, and go to state 82
    '/'     shift, and go to state 83
    '^'     shift, and go to state 84

    $default  reduce using rule 74 (field)


State 72

   67 tableconstructor: '{' fieldlist . '}'

    '}'  shift, and go to state 111


State 73

   68 fieldlist: field . __fieldsepfield
   69          | field . __fieldsepfield fieldsep

    $default  reduce using rule 70 (__fieldsepfield)

    __fieldsepfield  go to state 112


State 74

   15 stat: IF exp THEN . block __elseif END
   16     | IF exp THEN . block __elseif ELSE block END

    $default  reduce using rule 3 (__stat)

    chunk   go to state 42
    __stat  go to state 2
    block   go to state 113


State 75

   86 binopexp: exp OR . exp

    LENGTH    shift, and go to state 21
    NOT       shift, and go to state 22
    '-'       shift, and go to state 23
    NIL       shift, and go to state 24
    FALSE     shift, and go to state 25
    TRUE      shift, and go to state 26
    NUMBER    shift, and go to state 27
    STRING    shift, and go to state 28
    NAME      shift, and go to state 12
    FUNCTION  shift, and go to state 29
    DDDOT     shift, and go to state 30
    '('       shift, and go to state 14
    '{'       shift, and go to state 31

    var               go to state 32
    exp               go to state 114
    prefixexp         go to state 34
    functioncall      go to state 35
    function          go to state 36
    tableconstructor  go to state 37
    binopexp          go to state 38
    unop              go to state 39


State 76

   85 binopexp: exp AND . exp

    LENGTH    shift, and go to state 21
    NOT       shift, and go to state 22
    '-'       shift, and go to state 23
    NIL       shift, and go to state 24
    FALSE     shift, and go to state 25
    TRUE      shift, and go to state 26
    NUMBER    shift, and go to state 27
    STRING    shift, and go to state 28
    NAME      shift, and go to state 12
    FUNCTION  shift, and go to state 29
    DDDOT     shift, and go to state 30
    '('       shift, and go to state 14
    '{'       shift, and go to state 31

    var               go to state 32
    exp               go to state 115
    prefixexp         go to state 34
    functioncall      go to state 35
    function          go to state 36
    tableconstructor  go to state 37
    binopexp          go to state 38
    unop              go to state 39


State 77

   84 binopexp: exp COMP . exp

    LENGTH    shift, and go to state 21
    NOT       shift, and go to state 22
    '-'       shift, and go to state 23
    NIL       shift, and go to state 24
    FALSE     shift, and go to state 25
    TRUE      shift, and go to state 26
    NUMBER    shift, and go to state 27
    STRING    shift, and go to state 28
    NAME      shift, and go to state 12
    FUNCTION  shift, and go to state 29
    DDDOT     shift, and go to state 30
    '('       shift, and go to state 14
    '{'       shift, and go to state 31

    var               go to state 32
    exp               go to state 116
    prefixexp         go to state 34
    functioncall      go to state 35
    function          go to state 36
    tableconstructor  go to state 37
    binopexp          go to state 38
    unop              go to state 39


State 78

   83 binopexp: exp CONCAT . exp

    LENGTH    shift, and go to state 21
    NOT       shift, and go to state 22
    '-'       shift, and go to state 23
    NIL       shift, and go to state 24
    FALSE     shift, and go to state 25
    TRUE      shift, and go to state 26
    NUMBER    shift, and go to state 27
    STRING    shift, and go to state 28
    NAME      shift, and go to state 12
    FUNCTION  shift, and go to state 29
    DDDOT     shift, and go to state 30
    '('       shift, and go to state 14
    '{'       shift, and go to state 31

    var               go to state 32
    exp               go to state 117
    prefixexp         go to state 34
    functioncall      go to state 35
    function          go to state 36
    tableconstructor  go to state 37
    binopexp          go to state 38
    unop              go to state 39


State 79

   77 binopexp: exp '+' . exp

    LENGTH    shift, and go to state 21
    NOT       shift, and go to state 22
    '-'       shift, and go to state 23
    NIL       shift, and go to state 24
    FALSE     shift, and go to state 25
    TRUE      shift, and go to state 26
    NUMBER    shift, and go to state 27
    STRING    shift, and go to state 28
    NAME      shift, and go to state 12
    FUNCTION  shift, and go to state 29
    DDDOT     shift, and go to state 30
    '('       shift, and go to state 14
    '{'       shift, and go to state 31

    var               go to state 32
    exp               go to state 118
    prefixexp         go to state 34
    functioncall      go to state 35
    function          go to state 36
    tableconstructor  go to state 37
    binopexp          go to state 38
    unop              go to state 39


State 80

   78 binopexp: exp '-' . exp

    LENGTH    shift, and go to state 21
    NOT       shift, and go to state 22
    '-'       shift, and go to state 23
    NIL       shift, and go to state 24
    FALSE     shift, and go to state 25
    TRUE      shift, and go to state 26
    NUMBER    shift, and go to state 27
    STRING    shift, and go to state 28
    NAME      shift, and go to state 12
    FUNCTION  shift, and go to state 29
    DDDOT     shift, and go to state 30
    '('       shift, and go to state 14
    '{'       shift, and go to state 31

    var               go to state 32
    exp               go to state 119
    prefixexp         go to state 34
    functioncall      go to state 35
    function          go to state 36
    tableconstructor  go to state 37
    binopexp          go to state 38
    unop              go to state 39


State 81

   79 binopexp: exp '*' . exp

    LENGTH    shift, and go to state 21
    NOT       shift, and go to state 22
    '-'       shift, and go to state 23
    NIL       shift, and go to state 24
    FALSE     shift, and go to state 25
    TRUE      shift, and go to state 26
    NUMBER    shift, and go to state 27
    STRING    shift, and go to state 28
    NAME      shift, and go to state 12
    FUNCTION  shift, and go to state 29
    DDDOT     shift, and go to state 30
    '('       shift, and go to state 14
    '{'       shift, and go to state 31

    var               go to state 32
    exp               go to state 120
    prefixexp         go to state 34
    functioncall      go to state 35
    function          go to state 36
    tableconstructor  go to state 37
    binopexp          go to state 38
    unop              go to state 39


State 82

   82 binopexp: exp '%' . exp

    LENGTH    shift, and go to state 21
    NOT       shift, and go to state 22
    '-'       shift, and go to state 23
    NIL       shift, and go to state 24
    FALSE     shift, and go to state 25
    TRUE      shift, and go to state 26
    NUMBER    shift, and go to state 27
    STRING    shift, and go to state 28
    NAME      shift, and go to state 12
    FUNCTION  shift, and go to state 29
    DDDOT     shift, and go to state 30
    '('       shift, and go to state 14
    '{'       shift, and go to state 31

    var               go to state 32
    exp               go to state 121
    prefixexp         go to state 34
    functioncall      go to state 35
    function          go to state 36
    tableconstructor  go to state 37
    binopexp          go to state 38
    unop              go to state 39


State 83

   80 binopexp: exp '/' . exp

    LENGTH    shift, and go to state 21
    NOT       shift, and go to state 22
    '-'       shift, and go to state 23
    NIL       shift, and go to state 24
    FALSE     shift, and go to state 25
    TRUE      shift, and go to state 26
    NUMBER    shift, and go to state 27
    STRING    shift, and go to state 28
    NAME      shift, and go to state 12
    FUNCTION  shift, and go to state 29
    DDDOT     shift, and go to state 30
    '('       shift, and go to state 14
    '{'       shift, and go to state 31

    var               go to state 32
    exp               go to state 122
    prefixexp         go to state 34
    functioncall      go to state 35
    function          go to state 36
    tableconstructor  go to state 37
    binopexp          go to state 38
    unop              go to state 39


State 84

   81 binopexp: exp '^' . exp

    LENGTH    shift, and go to state 21
    NOT       shift, and go to state 22
    '-'       shift, and go to state 23
    NIL       shift, and go to state 24
    FALSE     shift, and go to state 25
    TRUE      shift, and go to state 26
    NUMBER    shift, and go to state 27
    STRING    shift, and go to state 28
    NAME      shift, and go to state 12
    FUNCTION  shift, and go to state 29
    DDDOT     shift, and go to state 30
    '('       shift, and go to state 14
    '{'       shift, and go to state 31

    var               go to state 32
    exp               go to state 123
    prefixexp         go to state 34
    functioncall      go to state 35
    function          go to state 36
    tableconstructor  go to state 37
    binopexp          go to state 38
    unop              go to state 39


State 85

   49 exp: unop exp .
   77 binopexp: exp . '+' exp
   78         | exp . '-' exp
   79         | exp . '*' exp
   80         | exp . '/' exp
   81         | exp . '^' exp
   82         | exp . '%' exp
   83         | exp . CONCAT exp
   84         | exp . COMP exp
   85         | exp . AND exp
   86         | exp . OR exp

    OR      shift, and go to state 75
    AND     shift, and go to state 76
    COMP    shift, and go to state 77
    CONCAT  shift, and go to state 78
    '+'     shift, and go to state 79
    '-'     shift, and go to state 80
    '*'     shift, and go to state 81
    '%'     shift, and go to state 82
    '/'     shift, and go to state 83
    '^'     shift, and go to state 84

    OR        [reduce using rule 49 (exp)]
    AND       [reduce using rule 49 (exp)]
    COMP      [reduce using rule 49 (exp)]
    CONCAT    [reduce using rule 49 (exp)]
    '+'       [reduce using rule 49 (exp)]
    '-'       [reduce using rule 49 (exp)]
    '*'       [reduce using rule 49 (exp)]
    '%'       [reduce using rule 49 (exp)]
    '/'       [reduce using rule 49 (exp)]
    '^'       [reduce using rule 49 (exp)]
    $default  reduce using rule 49 (exp)


State 86

   17 stat: FOR NAME '=' . exp ',' exp DO block END
   18     | FOR NAME '=' . exp ',' exp ',' exp DO block END

    LENGTH    shift, and go to state 21
    NOT       shift, and go to state 22
    '-'       shift, and go to state 23
    NIL       shift, and go to state 24
    FALSE     shift, and go to state 25
    TRUE      shift, and go to state 26
    NUMBER    shift, and go to state 27
    STRING    shift, and go to state 28
    NAME      shift, and go to state 12
    FUNCTION  shift, and go to state 29
    DDDOT     shift, and go to state 30
    '('       shift, and go to state 14
    '{'       shift, and go to state 31

    var               go to state 32
    exp               go to state 124
    prefixexp         go to state 34
    functioncall      go to state 35
    function          go to state 36
    tableconstructor  go to state 37
    binopexp          go to state 38
    unop              go to state 39


State 87

   19 stat: FOR namelist IN . explist DO block END

    LENGTH    shift, and go to state 21
    NOT       shift, and go to state 22
    '-'       shift, and go to state 23
    NIL       shift, and go to state 24
    FALSE     shift, and go to state 25
    TRUE      shift, and go to state 26
    NUMBER    shift, and go to state 27
    STRING    shift, and go to state 28
    NAME      shift, and go to state 12
    FUNCTION  shift, and go to state 29
    DDDOT     shift, and go to state 30
    '('       shift, and go to state 14
    '{'       shift, and go to state 31

    var               go to state 32
    explist           go to state 125
    exp               go to state 50
    prefixexp         go to state 34
    functioncall      go to state 35
    function          go to state 36
    tableconstructor  go to state 37
    binopexp          go to state 38
    unop              go to state 39


State 88

   36 namelist: namelist ',' . NAME

    NAME  shift, and go to state 126


State 89

   12 stat: DO block END .

    $default  reduce using rule 12 (stat)


State 90

   14 stat: REPEAT block UNTIL . exp

    LENGTH    shift, and go to state 21
    NOT       shift, and go to state 22
    '-'       shift, and go to state 23
    NIL       shift, and go to state 24
    FALSE     shift, and go to state 25
    TRUE      shift, and go to state 26
    NUMBER    shift, and go to state 27
    STRING    shift, and go to state 28
    NAME      shift, and go to state 12
    FUNCTION  shift, and go to state 29
    DDDOT     shift, and go to state 30
    '('       shift, and go to state 14
    '{'       shift, and go to state 31

    var               go to state 32
    exp               go to state 127
    prefixexp         go to state 34
    functioncall      go to state 35
    function          go to state 36
    tableconstructor  go to state 37
    binopexp          go to state 38
    unop              go to state 39


State 91

   13 stat: WHILE exp DO . block END

    $default  reduce using rule 3 (__stat)

    chunk   go to state 42
    __stat  go to state 2
    block   go to state 128


State 92

   21 stat: LOCAL FUNCTION NAME . funcbody

    '('  shift, and go to state 66

    funcbody  go to state 129


State 93

   23 stat: LOCAL namelist '=' . explist

    LENGTH    shift, and go to state 21
    NOT       shift, and go to state 22
    '-'       shift, and go to state 23
    NIL       shift, and go to state 24
    FALSE     shift, and go to state 25
    TRUE      shift, and go to state 26
    NUMBER    shift, and go to state 27
    STRING    shift, and go to state 28
    NAME      shift, and go to state 12
    FUNCTION  shift, and go to state 29
    DDDOT     shift, and go to state 30
    '('       shift, and go to state 14
    '{'       shift, and go to state 31

    var               go to state 32
    explist           go to state 130
    exp               go to state 50
    prefixexp         go to state 34
    functioncall      go to state 35
    function          go to state 36
    tableconstructor  go to state 37
    binopexp          go to state 38
    unop              go to state 39


State 94

   38 explist: explist ',' . exp

    LENGTH    shift, and go to state 21
    NOT       shift, and go to state 22
    '-'       shift, and go to state 23
    NIL       shift, and go to state 24
    FALSE     shift, and go to state 25
    TRUE      shift, and go to state 26
    NUMBER    shift, and go to state 27
    STRING    shift, and go to state 28
    NAME      shift, and go to state 12
    FUNCTION  shift, and go to state 29
    DDDOT     shift, and go to state 30
    '('       shift, and go to state 14
    '{'       shift, and go to state 31

    var               go to state 32
    exp               go to state 131
    prefixexp         go to state 34
    functioncall      go to state 35
    function          go to state 36
    tableconstructor  go to state 37
    binopexp          go to state 38
    unop              go to state 39


State 95

   28 funcname: NAME __dotname .
   29         | NAME __dotname . ':' NAME
   31 __dotname: __dotname . '.' NAME

    ':'  shift, and go to state 132
    '.'  shift, and go to state 133

    $default  reduce using rule 28 (funcname)


State 96

   20 stat: FUNCTION funcname funcbody .

    $default  reduce using rule 20 (stat)


State 97

   52 prefixexp: '(' exp ')' .

    $default  reduce using rule 52 (prefixexp)


State 98

   11 stat: varlist '=' explist .
   38 explist: explist . ',' exp

    ','  shift, and go to state 94

    $default  reduce using rule 11 (stat)


State 99

   27 varlist: varlist ',' var .
   50 prefixexp: var .

    '='       reduce using rule 27 (varlist)
    ','       reduce using rule 27 (varlist)
    $default  reduce using rule 50 (prefixexp)


State 100

   55 functioncall: prefixexp ':' NAME . args

    STRING  shift, and go to state 59
    '('     shift, and go to state 63
    '{'     shift, and go to state 31

    args              go to state 134
    tableconstructor  go to state 65


State 101

   34 var: prefixexp '.' NAME .

    $default  reduce using rule 34 (var)


State 102

   33 var: prefixexp '[' exp . ']'
   77 binopexp: exp . '+' exp
   78         | exp . '-' exp
   79         | exp . '*' exp
   80         | exp . '/' exp
   81         | exp . '^' exp
   82         | exp . '%' exp
   83         | exp . CONCAT exp
   84         | exp . COMP exp
   85         | exp . AND exp
   86         | exp . OR exp

    OR      shift, and go to state 75
    AND     shift, and go to state 76
    COMP    shift, and go to state 77
    CONCAT  shift, and go to state 78
    '+'     shift, and go to state 79
    '-'     shift, and go to state 80
    '*'     shift, and go to state 81
    '%'     shift, and go to state 82
    '/'     shift, and go to state 83
    '^'     shift, and go to state 84
    ']'     shift, and go to state 135


State 103

   56 args: '(' ')' .

    $default  reduce using rule 56 (args)


State 104

   38 explist: explist . ',' exp
   57 args: '(' explist . ')'

    ','  shift, and go to state 94
    ')'  shift, and go to state 136


State 105

   65 parlist: DDDOT .

    $default  reduce using rule 65 (parlist)


State 106

   61 funcbody: '(' ')' . block END

    $default  reduce using rule 3 (__stat)

    chunk   go to state 42
    __stat  go to state 2
    block   go to state 137


State 107

   36 namelist: namelist . ',' NAME
   63 parlist: namelist .
   64        | namelist . ',' DDDOT

    ','  shift, and go to state 138

    $default  reduce using rule 63 (parlist)


State 108

   62 funcbody: '(' parlist . ')' block END

    ')'  shift, and go to state 139


State 109

   73 field: NAME '=' . exp

    LENGTH    shift, and go to state 21
    NOT       shift, and go to state 22
    '-'       shift, and go to state 23
    NIL       shift, and go to state 24
    FALSE     shift, and go to state 25
    TRUE      shift, and go to state 26
    NUMBER    shift, and go to state 27
    STRING    shift, and go to state 28
    NAME      shift, and go to state 12
    FUNCTION  shift, and go to state 29
    DDDOT     shift, and go to state 30
    '('       shift, and go to state 14
    '{'       shift, and go to state 31

    var               go to state 32
    exp               go to state 140
    prefixexp         go to state 34
    functioncall      go to state 35
    function          go to state 36
    tableconstructor  go to state 37
    binopexp          go to state 38
    unop              go to state 39


State 110

   72 field: '[' exp . ']' '=' exp
   77 binopexp: exp . '+' exp
   78         | exp . '-' exp
   79         | exp . '*' exp
   80         | exp . '/' exp
   81         | exp . '^' exp
   82         | exp . '%' exp
   83         | exp . CONCAT exp
   84         | exp . COMP exp
   85         | exp . AND exp
   86         | exp . OR exp

    OR      shift, and go to state 75
    AND     shift, and go to state 76
    COMP    shift, and go to state 77
    CONCAT  shift, and go to state 78
    '+'     shift, and go to state 79
    '-'     shift, and go to state 80
    '*'     shift, and go to state 81
    '%'     shift, and go to state 82
    '/'     shift, and go to state 83
    '^'     shift, and go to state 84
    ']'     shift, and go to state 141


State 111

   67 tableconstructor: '{' fieldlist '}' .

    $default  reduce using rule 67 (tableconstructor)


State 112

   68 fieldlist: field __fieldsepfield .
   69          | field __fieldsepfield . fieldsep
   71 __fieldsepfield: __fieldsepfield . fieldsep field

    ';'  shift, and go to state 142
    ','  shift, and go to state 143

    $default  reduce using rule 68 (fieldlist)

    fieldsep  go to state 144


State 113

   15 stat: IF exp THEN block . __elseif END
   16     | IF exp THEN block . __elseif ELSE block END

    $default  reduce using rule 24 (__elseif)

    __elseif  go to state 145


State 114

   77 binopexp: exp . '+' exp
   78         | exp . '-' exp
   79         | exp . '*' exp
   80         | exp . '/' exp
   81         | exp . '^' exp
   82         | exp . '%' exp
   83         | exp . CONCAT exp
   84         | exp . COMP exp
   85         | exp . AND exp
   86         | exp . OR exp
   86         | exp OR exp .

    AND     shift, and go to state 76
    COMP    shift, and go to state 77
    CONCAT  shift, and go to state 78
    '+'     shift, and go to state 79
    '-'     shift, and go to state 80
    '*'     shift, and go to state 81
    '%'     shift, and go to state 82
    '/'     shift, and go to state 83
    '^'     shift, and go to state 84

    $default  reduce using rule 86 (binopexp)


State 115

   77 binopexp: exp . '+' exp
   78         | exp . '-' exp
   79         | exp . '*' exp
   80         | exp . '/' exp
   81         | exp . '^' exp
   82         | exp . '%' exp
   83         | exp . CONCAT exp
   84         | exp . COMP exp
   85         | exp . AND exp
   85         | exp AND exp .
   86         | exp . OR exp

    COMP    shift, and go to state 77
    CONCAT  shift, and go to state 78
    '+'     shift, and go to state 79
    '-'     shift, and go to state 80
    '*'     shift, and go to state 81
    '%'     shift, and go to state 82
    '/'     shift, and go to state 83
    '^'     shift, and go to state 84

    $default  reduce using rule 85 (binopexp)


State 116

   77 binopexp: exp . '+' exp
   78         | exp . '-' exp
   79         | exp . '*' exp
   80         | exp . '/' exp
   81         | exp . '^' exp
   82         | exp . '%' exp
   83         | exp . CONCAT exp
   84         | exp . COMP exp
   84         | exp COMP exp .
   85         | exp . AND exp
   86         | exp . OR exp

    CONCAT  shift, and go to state 78
    '+'     shift, and go to state 79
    '-'     shift, and go to state 80
    '*'     shift, and go to state 81
    '%'     shift, and go to state 82
    '/'     shift, and go to state 83
    '^'     shift, and go to state 84

    $default  reduce using rule 84 (binopexp)


State 117

   77 binopexp: exp . '+' exp
   78         | exp . '-' exp
   79         | exp . '*' exp
   80         | exp . '/' exp
   81         | exp . '^' exp
   82         | exp . '%' exp
   83         | exp . CONCAT exp
   83         | exp CONCAT exp .
   84         | exp . COMP exp
   85         | exp . AND exp
   86         | exp . OR exp

    CONCAT  shift, and go to state 78
    '+'     shift, and go to state 79
    '-'     shift, and go to state 80
    '*'     shift, and go to state 81
    '%'     shift, and go to state 82
    '/'     shift, and go to state 83
    '^'     shift, and go to state 84

    $default  reduce using rule 83 (binopexp)


State 118

   77 binopexp: exp . '+' exp
   77         | exp '+' exp .
   78         | exp . '-' exp
   79         | exp . '*' exp
   80         | exp . '/' exp
   81         | exp . '^' exp
   82         | exp . '%' exp
   83         | exp . CONCAT exp
   84         | exp . COMP exp
   85         | exp . AND exp
   86         | exp . OR exp

    '*'  shift, and go to state 81
    '%'  shift, and go to state 82
    '/'  shift, and go to state 83
    '^'  shift, and go to state 84

    $default  reduce using rule 77 (binopexp)


State 119

   77 binopexp: exp . '+' exp
   78         | exp . '-' exp
   78         | exp '-' exp .
   79         | exp . '*' exp
   80         | exp . '/' exp
   81         | exp . '^' exp
   82         | exp . '%' exp
   83         | exp . CONCAT exp
   84         | exp . COMP exp
   85         | exp . AND exp
   86         | exp . OR exp

    '*'  shift, and go to state 81
    '%'  shift, and go to state 82
    '/'  shift, and go to state 83
    '^'  shift, and go to state 84

    $default  reduce using rule 78 (binopexp)


State 120

   77 binopexp: exp . '+' exp
   78         | exp . '-' exp
   79         | exp . '*' exp
   79         | exp '*' exp .
   80         | exp . '/' exp
   81         | exp . '^' exp
   82         | exp . '%' exp
   83         | exp . CONCAT exp
   84         | exp . COMP exp
   85         | exp . AND exp
   86         | exp . OR exp

    '/'  shift, and go to state 83
    '^'  shift, and go to state 84

    $default  reduce using rule 79 (binopexp)


State 121

   77 binopexp: exp . '+' exp
   78         | exp . '-' exp
   79         | exp . '*' exp
   80         | exp . '/' exp
   81         | exp . '^' exp
   82         | exp . '%' exp
   82         | exp '%' exp .
   83         | exp . CONCAT exp
   84         | exp . COMP exp
   85         | exp . AND exp
   86         | exp . OR exp

    '/'  shift, and go to state 83
    '^'  shift, and go to state 84

    $default  reduce using rule 82 (binopexp)


State 122

   77 binopexp: exp . '+' exp
   78         | exp . '-' exp
   79         | exp . '*' exp
   80         | exp . '/' exp
   80         | exp '/' exp .
   81         | exp . '^' exp
   82         | exp . '%' exp
   83         | exp . CONCAT exp
   84         | exp . COMP exp
   85         | exp . AND exp
   86         | exp . OR exp

    '^'  shift, and go to state 84

    $default  reduce using rule 80 (binopexp)


State 123

   77 binopexp: exp . '+' exp
   78         | exp . '-' exp
   79         | exp . '*' exp
   80         | exp . '/' exp
   81         | exp . '^' exp
   81         | exp '^' exp .
   82         | exp . '%' exp
   83         | exp . CONCAT exp
   84         | exp . COMP exp
   85         | exp . AND exp
   86         | exp . OR exp

    '^'  shift, and go to state 84

    $default  reduce using rule 81 (binopexp)


State 124

   17 stat: FOR NAME '=' exp . ',' exp DO block END
   18     | FOR NAME '=' exp . ',' exp ',' exp DO block END
   77 binopexp: exp . '+' exp
   78         | exp . '-' exp
   79         | exp . '*' exp
   80         | exp . '/' exp
   81         | exp . '^' exp
   82         | exp . '%' exp
   83         | exp . CONCAT exp
   84         | exp . COMP exp
   85         | exp . AND exp
   86         | exp . OR exp

    OR      shift, and go to state 75
    AND     shift, and go to state 76
    COMP    shift, and go to state 77
    CONCAT  shift, and go to state 78
    '+'     shift, and go to state 79
    '-'     shift, and go to state 80
    '*'     shift, and go to state 81
    '%'     shift, and go to state 82
    '/'     shift, and go to state 83
    '^'     shift, and go to state 84
    ','     shift, and go to state 146


State 125

   19 stat: FOR namelist IN explist . DO block END
   38 explist: explist . ',' exp

    DO   shift, and go to state 147
    ','  shift, and go to state 94


State 126

   36 namelist: namelist ',' NAME .

    $default  reduce using rule 36 (namelist)


State 127

   14 stat: REPEAT block UNTIL exp .
   77 binopexp: exp . '+' exp
   78         | exp . '-' exp
   79         | exp . '*' exp
   80         | exp . '/' exp
   81         | exp . '^' exp
   82         | exp . '%' exp
   83         | exp . CONCAT exp
   84         | exp . COMP exp
   85         | exp . AND exp
   86         | exp . OR exp

    OR      shift, and go to state 75
    AND     shift, and go to state 76
    COMP    shift, and go to state 77
    CONCAT  shift, and go to state 78
    '+'     shift, and go to state 79
    '-'     shift, and go to state 80
    '*'     shift, and go to state 81
    '%'     shift, and go to state 82
    '/'     shift, and go to state 83
    '^'     shift, and go to state 84

    $default  reduce using rule 14 (stat)


State 128

   13 stat: WHILE exp DO block . END

    END  shift, and go to state 148


State 129

   21 stat: LOCAL FUNCTION NAME funcbody .

    $default  reduce using rule 21 (stat)


State 130

   23 stat: LOCAL namelist '=' explist .
   38 explist: explist . ',' exp

    ','  shift, and go to state 94

    $default  reduce using rule 23 (stat)


State 131

   38 explist: explist ',' exp .
   77 binopexp: exp . '+' exp
   78         | exp . '-' exp
   79         | exp . '*' exp
   80         | exp . '/' exp
   81         | exp . '^' exp
   82         | exp . '%' exp
   83         | exp . CONCAT exp
   84         | exp . COMP exp
   85         | exp . AND exp
   86         | exp . OR exp

    OR      shift, and go to state 75
    AND     shift, and go to state 76
    COMP    shift, and go to state 77
    CONCAT  shift, and go to state 78
    '+'     shift, and go to state 79
    '-'     shift, and go to state 80
    '*'     shift, and go to state 81
    '%'     shift, and go to state 82
    '/'     shift, and go to state 83
    '^'     shift, and go to state 84

    $default  reduce using rule 38 (explist)


State 132

   29 funcname: NAME __dotname ':' . NAME

    NAME  shift, and go to state 149


State 133

   31 __dotname: __dotname '.' . NAME

    NAME  shift, and go to state 150


State 134

   55 functioncall: prefixexp ':' NAME args .

    $default  reduce using rule 55 (functioncall)


State 135

   33 var: prefixexp '[' exp ']' .

    $default  reduce using rule 33 (var)


State 136

   57 args: '(' explist ')' .

    $default  reduce using rule 57 (args)


State 137

   61 funcbody: '(' ')' block . END

    END  shift, and go to state 151


State 138

   36 namelist: namelist ',' . NAME
   64 parlist: namelist ',' . DDDOT

    NAME   shift, and go to state 126
    DDDOT  shift, and go to state 152


State 139

   62 funcbody: '(' parlist ')' . block END

    $default  reduce using rule 3 (__stat)

    chunk   go to state 42
    __stat  go to state 2
    block   go to state 153


State 140

   73 field: NAME '=' exp .
   77 binopexp: exp . '+' exp
   78         | exp . '-' exp
   79         | exp . '*' exp
   80         | exp . '/' exp
   81         | exp . '^' exp
   82         | exp . '%' exp
   83         | exp . CONCAT exp
   84         | exp . COMP exp
   85         | exp . AND exp
   86         | exp . OR exp

    OR      shift, and go to state 75
    AND     shift, and go to state 76
    COMP    shift, and go to state 77
    CONCAT  shift, and go to state 78
    '+'     shift, and go to state 79
    '-'     shift, and go to state 80
    '*'     shift, and go to state 81
    '%'     shift, and go to state 82
    '/'     shift, and go to state 83
    '^'     shift, and go to state 84

    $default  reduce using rule 73 (field)


State 141

   72 field: '[' exp ']' . '=' exp

    '='  shift, and go to state 154


State 142

   76 fieldsep: ';' .

    $default  reduce using rule 76 (fieldsep)


State 143

   75 fieldsep: ',' .

    $default  reduce using rule 75 (fieldsep)


State 144

   69 fieldlist: field __fieldsepfield fieldsep .
   71 __fieldsepfield: __fieldsepfield fieldsep . field

    LENGTH    shift, and go to state 21
    NOT       shift, and go to state 22
    '-'       shift, and go to state 23
    NIL       shift, and go to state 24
    FALSE     shift, and go to state 25
    TRUE      shift, and go to state 26
    NUMBER    shift, and go to state 27
    STRING    shift, and go to state 28
    NAME      shift, and go to state 68
    FUNCTION  shift, and go to state 29
    DDDOT     shift, and go to state 30
    '['       shift, and go to state 69
    '('       shift, and go to state 14
    '{'       shift, and go to state 31

    $default  reduce using rule 69 (fieldlist)

    var               go to state 32
    exp               go to state 71
    prefixexp         go to state 34
    functioncall      go to state 35
    function          go to state 36
    tableconstructor  go to state 37
    field             go to state 155
    binopexp          go to state 38
    unop              go to state 39


State 145

   15 stat: IF exp THEN block __elseif . END
   16     | IF exp THEN block __elseif . ELSE block END
   25 __elseif: __elseif . ELSEIF exp THEN block

    ELSEIF  shift, and go to state 156
    ELSE    shift, and go to state 157
    END     shift, and go to state 158


State 146

   17 stat: FOR NAME '=' exp ',' . exp DO block END
   18     | FOR NAME '=' exp ',' . exp ',' exp DO block END

    LENGTH    shift, and go to state 21
    NOT       shift, and go to state 22
    '-'       shift, and go to state 23
    NIL       shift, and go to state 24
    FALSE     shift, and go to state 25
    TRUE      shift, and go to state 26
    NUMBER    shift, and go to state 27
    STRING    shift, and go to state 28
    NAME      shift, and go to state 12
    FUNCTION  shift, and go to state 29
    DDDOT     shift, and go to state 30
    '('       shift, and go to state 14
    '{'       shift, and go to state 31

    var               go to state 32
    exp               go to state 159
    prefixexp         go to state 34
    functioncall      go to state 35
    function          go to state 36
    tableconstructor  go to state 37
    binopexp          go to state 38
    unop              go to state 39


State 147

   19 stat: FOR namelist IN explist DO . block END

    $default  reduce using rule 3 (__stat)

    chunk   go to state 42
    __stat  go to state 2
    block   go to state 160


State 148

   13 stat: WHILE exp DO block END .

    $default  reduce using rule 13 (stat)


State 149

   29 funcname: NAME __dotname ':' NAME .

    $default  reduce using rule 29 (funcname)


State 150

   31 __dotname: __dotname '.' NAME .

    $default  reduce using rule 31 (__dotname)


State 151

   61 funcbody: '(' ')' block END .

    $default  reduce using rule 61 (funcbody)


State 152

   64 parlist: namelist ',' DDDOT .

    $default  reduce using rule 64 (parlist)


State 153

   62 funcbody: '(' parlist ')' block . END

    END  shift, and go to state 161


State 154

   72 field: '[' exp ']' '=' . exp

    LENGTH    shift, and go to state 21
    NOT       shift, and go to state 22
    '-'       shift, and go to state 23
    NIL       shift, and go to state 24
    FALSE     shift, and go to state 25
    TRUE      shift, and go to state 26
    NUMBER    shift, and go to state 27
    STRING    shift, and go to state 28
    NAME      shift, and go to state 12
    FUNCTION  shift, and go to state 29
    DDDOT     shift, and go to state 30
    '('       shift, and go to state 14
    '{'       shift, and go to state 31

    var               go to state 32
    exp               go to state 162
    prefixexp         go to state 34
    functioncall      go to state 35
    function          go to state 36
    tableconstructor  go to state 37
    binopexp          go to state 38
    unop              go to state 39


State 155

   71 __fieldsepfield: __fieldsepfield fieldsep field .

    $default  reduce using rule 71 (__fieldsepfield)


State 156

   25 __elseif: __elseif ELSEIF . exp THEN block

    LENGTH    shift, and go to state 21
    NOT       shift, and go to state 22
    '-'       shift, and go to state 23
    NIL       shift, and go to state 24
    FALSE     shift, and go to state 25
    TRUE      shift, and go to state 26
    NUMBER    shift, and go to state 27
    STRING    shift, and go to state 28
    NAME      shift, and go to state 12
    FUNCTION  shift, and go to state 29
    DDDOT     shift, and go to state 30
    '('       shift, and go to state 14
    '{'       shift, and go to state 31

    var               go to state 32
    exp               go to state 163
    prefixexp         go to state 34
    functioncall      go to state 35
    function          go to state 36
    tableconstructor  go to state 37
    binopexp          go to state 38
    unop              go to state 39


State 157

   16 stat: IF exp THEN block __elseif ELSE . block END

    $default  reduce using rule 3 (__stat)

    chunk   go to state 42
    __stat  go to state 2
    block   go to state 164


State 158

   15 stat: IF exp THEN block __elseif END .

    $default  reduce using rule 15 (stat)


State 159

   17 stat: FOR NAME '=' exp ',' exp . DO block END
   18     | FOR NAME '=' exp ',' exp . ',' exp DO block END
   77 binopexp: exp . '+' exp
   78         | exp . '-' exp
   79         | exp . '*' exp
   80         | exp . '/' exp
   81         | exp . '^' exp
   82         | exp . '%' exp
   83         | exp . CONCAT exp
   84         | exp . COMP exp
   85         | exp . AND exp
   86         | exp . OR exp

    DO      shift, and go to state 165
    OR      shift, and go to state 75
    AND     shift, and go to state 76
    COMP    shift, and go to state 77
    CONCAT  shift, and go to state 78
    '+'     shift, and go to state 79
    '-'     shift, and go to state 80
    '*'     shift, and go to state 81
    '%'     shift, and go to state 82
    '/'     shift, and go to state 83
    '^'     shift, and go to state 84
    ','     shift, and go to state 166


State 160

   19 stat: FOR namelist IN explist DO block . END

    END  shift, and go to state 167


State 161

   62 funcbody: '(' parlist ')' block END .

    $default  reduce using rule 62 (funcbody)


State 162

   72 field: '[' exp ']' '=' exp .
   77 binopexp: exp . '+' exp
   78         | exp . '-' exp
   79         | exp . '*' exp
   80         | exp . '/' exp
   81         | exp . '^' exp
   82         | exp . '%' exp
   83         | exp . CONCAT exp
   84         | exp . COMP exp
   85         | exp . AND exp
   86         | exp . OR exp

    OR      shift, and go to state 75
    AND     shift, and go to state 76
    COMP    shift, and go to state 77
    CONCAT  shift, and go to state 78
    '+'     shift, and go to state 79
    '-'     shift, and go to state 80
    '*'     shift, and go to state 81
    '%'     shift, and go to state 82
    '/'     shift, and go to state 83
    '^'     shift, and go to state 84

    $default  reduce using rule 72 (field)


State 163

   25 __elseif: __elseif ELSEIF exp . THEN block
   77 binopexp: exp . '+' exp
   78         | exp . '-' exp
   79         | exp . '*' exp
   80         | exp . '/' exp
   81         | exp . '^' exp
   82         | exp . '%' exp
   83         | exp . CONCAT exp
   84         | exp . COMP exp
   85         | exp . AND exp
   86         | exp . OR exp

    THEN    shift, and go to state 168
    OR      shift, and go to state 75
    AND     shift, and go to state 76
    COMP    shift, and go to state 77
    CONCAT  shift, and go to state 78
    '+'     shift, and go to state 79
    '-'     shift, and go to state 80
    '*'     shift, and go to state 81
    '%'     shift, and go to state 82
    '/'     shift, and go to state 83
    '^'     shift, and go to state 84


State 164

   16 stat: IF exp THEN block __elseif ELSE block . END

    END  shift, and go to state 169


State 165

   17 stat: FOR NAME '=' exp ',' exp DO . block END

    $default  reduce using rule 3 (__stat)

    chunk   go to state 42
    __stat  go to state 2
    block   go to state 170


State 166

   18 stat: FOR NAME '=' exp ',' exp ',' . exp DO block END

    LENGTH    shift, and go to state 21
    NOT       shift, and go to state 22
    '-'       shift, and go to state 23
    NIL       shift, and go to state 24
    FALSE     shift, and go to state 25
    TRUE      shift, and go to state 26
    NUMBER    shift, and go to state 27
    STRING    shift, and go to state 28
    NAME      shift, and go to state 12
    FUNCTION  shift, and go to state 29
    DDDOT     shift, and go to state 30
    '('       shift, and go to state 14
    '{'       shift, and go to state 31

    var               go to state 32
    exp               go to state 171
    prefixexp         go to state 34
    functioncall      go to state 35
    function          go to state 36
    tableconstructor  go to state 37
    binopexp          go to state 38
    unop              go to state 39


State 167

   19 stat: FOR namelist IN explist DO block END .

    $default  reduce using rule 19 (stat)


State 168

   25 __elseif: __elseif ELSEIF exp THEN . block

    $default  reduce using rule 3 (__stat)

    chunk   go to state 42
    __stat  go to state 2
    block   go to state 172


State 169

   16 stat: IF exp THEN block __elseif ELSE block END .

    $default  reduce using rule 16 (stat)


State 170

   17 stat: FOR NAME '=' exp ',' exp DO block . END

    END  shift, and go to state 173


State 171

   18 stat: FOR NAME '=' exp ',' exp ',' exp . DO block END
   77 binopexp: exp . '+' exp
   78         | exp . '-' exp
   79         | exp . '*' exp
   80         | exp . '/' exp
   81         | exp . '^' exp
   82         | exp . '%' exp
   83         | exp . CONCAT exp
   84         | exp . COMP exp
   85         | exp . AND exp
   86         | exp . OR exp

    DO      shift, and go to state 174
    OR      shift, and go to state 75
    AND     shift, and go to state 76
    COMP    shift, and go to state 77
    CONCAT  shift, and go to state 78
    '+'     shift, and go to state 79
    '-'     shift, and go to state 80
    '*'     shift, and go to state 81
    '%'     shift, and go to state 82
    '/'     shift, and go to state 83
    '^'     shift, and go to state 84


State 172

   25 __elseif: __elseif ELSEIF exp THEN block .

    $default  reduce using rule 25 (__elseif)


State 173

   17 stat: FOR NAME '=' exp ',' exp DO block END .

    $default  reduce using rule 17 (stat)


State 174

   18 stat: FOR NAME '=' exp ',' exp ',' exp DO . block END

    $default  reduce using rule 3 (__stat)

    chunk   go to state 42
    __stat  go to state 2
    block   go to state 175


State 175

   18 stat: FOR NAME '=' exp ',' exp ',' exp DO block . END

    END  shift, and go to state 176


State 176

   18 stat: FOR NAME '=' exp ',' exp ',' exp DO block END .

    $default  reduce using rule 18 (stat)
