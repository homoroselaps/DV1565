Nonterminals useless in grammar

   unop


Terminals unused in grammar

   ANY
   NL
   BLK


State 20 conflicts: 1 reduce/reduce
State 34 conflicts: 1 shift/reduce


Grammar

    0 $accept: chunk "end of file"

    1 chunk: __stat
    2      | __stat laststat _semi

    3 __stat: %empty
    4       | __stat stat _semi

    5 _semi: %empty
    6      | ';'

    7 laststat: RETURN explist
    8         | RETURN
    9         | BREAK

   10 block: chunk

   11 stat: varlist '=' explist
   12     | DO block END
   13     | WHILE exp DO block END
   14     | REPEAT block UNTIL exp
   15     | IF exp THEN block __elseif END
   16     | IF exp THEN block __elseif ELSE block END
   17     | FOR NAME '=' exp ',' exp DO block END
   18     | FOR NAME '=' exp ',' exp ',' exp DO block END
   19     | FOR namelist IN explist DO block END
   20     | FUNCTION funcname funcbody
   21     | LOCAL FUNCTION NAME funcbody
   22     | LOCAL namelist
   23     | LOCAL namelist '=' explist

   24 __elseif: %empty
   25         | __elseif ELSEIF exp THEN block

   26 varlist: var
   27        | varlist ',' var

   28 funcname: NAME __dotname
   29         | NAME __dotname ':' NAME

   30 __dotname: %empty
   31          | __dotname '.' NAME

   32 var: NAME
   33    | prefixexp '[' exp ']'
   34    | prefixexp '.' NAME

   35 namelist: NAME
   36         | namelist ',' NAME

   37 explist: exp
   38        | explist ',' exp

   39 exp: NIL
   40    | FALSE
   41    | TRUE
   42    | NUMBER
   43    | STRING
   44    | DDDOT
   45    | function
   46    | prefixexp
   47    | tableconstructor
   48    | binopexp
   49    | '-' exp
   50    | NOT exp
   51    | LENGTH exp

   52 prefixexp: var
   53          | functioncall
   54          | '(' exp ')'

   55 stat: functioncall

   56 functioncall: prefixexp args
   57             | prefixexp ':' NAME args

   58 args: '(' ')'
   59     | '(' explist ')'
   60     | tableconstructor
   61     | STRING

   62 function: FUNCTION funcbody

   63 funcbody: '(' ')' block END
   64         | '(' parlist ')' block END

   65 parlist: namelist
   66        | namelist ',' DDDOT
   67        | DDDOT

   68 tableconstructor: '{' '}'
   69                 | '{' fieldlist '}'

   70 fieldlist: __fieldsepfield
   71          | __fieldsepfield fieldsep

   72 __fieldsepfield: field
   73                | __fieldsepfield fieldsep field

   74 field: '[' exp ']' '=' exp
   75      | NAME '=' exp
   76      | exp

   77 fieldsep: ','
   78         | ';'

   79 binopexp: exp '+' exp
   80         | exp '-' exp
   81         | exp '*' exp
   82         | exp '/' exp
   83         | exp '^' exp
   84         | exp '%' exp
   85         | exp CONCAT exp
   86         | exp COMP exp
   87         | exp AND exp
   88         | exp OR exp


Terminals, with rules where they appear

"end of file" (0) 0
'%' (37) 84
'(' (40) 54 58 59 63 64
')' (41) 54 58 59 63 64
'*' (42) 81
'+' (43) 79
',' (44) 17 18 27 36 38 66 77
'-' (45) 49 80
'.' (46) 31 34
'/' (47) 82
':' (58) 29 57
';' (59) 6 78
'=' (61) 11 17 18 23 74 75
'[' (91) 33 74
']' (93) 33 74
'^' (94) 83
'{' (123) 68 69
'}' (125) 68 69
error (256)
IF (258) 15 16
THEN (259) 15 16 25
ELSEIF (260) 25
ELSE (261) 16
END (262) 12 13 15 16 17 18 19 63 64
FOR (263) 17 18 19
DO (264) 12 13 17 18 19
REPEAT (265) 14
UNTIL (266) 14
BREAK (267) 9
IN (268) 19
WHILE (269) 13
LOCAL (270) 21 22 23
ANY (271)
LENGTH (272) 51
NOT (273) 50
RETURN (274) 7 8
OR (275) 88
AND (276) 87
COMP (277) 86
CONCAT (278) 85
NIL (279) 39
FALSE (280) 40
TRUE (281) 41
NUMBER (282) 42
STRING (283) 43 61
NAME (284) 17 18 21 28 29 31 32 34 35 36 57 75
NL (285)
BLK (286)
FUNCTION (287) 20 21 62
DDDOT (288) 44 66 67


Nonterminals, with rules where they appear

$accept (51)
    on left: 0
chunk (52)
    on left: 1 2, on right: 0 10
__stat (53)
    on left: 3 4, on right: 1 2 4
_semi (54)
    on left: 5 6, on right: 2 4
laststat (55)
    on left: 7 8 9, on right: 2
block (56)
    on left: 10, on right: 12 13 14 15 16 17 18 19 25 63 64
stat (57)
    on left: 11 12 13 14 15 16 17 18 19 20 21 22 23 55, on right: 4
__elseif (58)
    on left: 24 25, on right: 15 16 25
varlist (59)
    on left: 26 27, on right: 11 27
funcname (60)
    on left: 28 29, on right: 20
__dotname (61)
    on left: 30 31, on right: 28 29 31
var (62)
    on left: 32 33 34, on right: 26 27 52
namelist (63)
    on left: 35 36, on right: 19 22 23 36 65 66
explist (64)
    on left: 37 38, on right: 7 11 19 23 38 59
exp (65)
    on left: 39 40 41 42 43 44 45 46 47 48 49 50 51, on right: 13 14
    15 16 17 18 25 33 37 38 49 50 51 54 74 75 76 79 80 81 82 83 84
    85 86 87 88
prefixexp (66)
    on left: 52 53 54, on right: 33 34 46 56 57
functioncall (67)
    on left: 56 57, on right: 53 55
args (68)
    on left: 58 59 60 61, on right: 56 57
function (69)
    on left: 62, on right: 45
funcbody (70)
    on left: 63 64, on right: 20 21 62
parlist (71)
    on left: 65 66 67, on right: 64
tableconstructor (72)
    on left: 68 69, on right: 47 60
fieldlist (73)
    on left: 70 71, on right: 69
__fieldsepfield (74)
    on left: 72 73, on right: 70 71 73
field (75)
    on left: 74 75 76, on right: 72 73
fieldsep (76)
    on left: 77 78, on right: 71 73
binopexp (77)
    on left: 79 80 81 82 83 84 85 86 87 88, on right: 48


State 0

    0 $accept: . chunk "end of file"

    $default  reduce using rule 3 (__stat)

    chunk   go to state 1
    __stat  go to state 2


State 1

    0 $accept: chunk . "end of file"

    "end of file"  shift, and go to state 3


State 2

    1 chunk: __stat .
    2      | __stat . laststat _semi
    4 __stat: __stat . stat _semi

    IF        shift, and go to state 4
    FOR       shift, and go to state 5
    DO        shift, and go to state 6
    REPEAT    shift, and go to state 7
    BREAK     shift, and go to state 8
    WHILE     shift, and go to state 9
    LOCAL     shift, and go to state 10
    RETURN    shift, and go to state 11
    NAME      shift, and go to state 12
    FUNCTION  shift, and go to state 13
    '('       shift, and go to state 14

    $default  reduce using rule 1 (chunk)

    laststat      go to state 15
    stat          go to state 16
    varlist       go to state 17
    var           go to state 18
    prefixexp     go to state 19
    functioncall  go to state 20


State 3

    0 $accept: chunk "end of file" .

    $default  accept


State 4

   15 stat: IF . exp THEN block __elseif END
   16     | IF . exp THEN block __elseif ELSE block END

    LENGTH    shift, and go to state 21
    NOT       shift, and go to state 22
    '-'       shift, and go to state 23
    NIL       shift, and go to state 24
    FALSE     shift, and go to state 25
    TRUE      shift, and go to state 26
    NUMBER    shift, and go to state 27
    STRING    shift, and go to state 28
    NAME      shift, and go to state 12
    FUNCTION  shift, and go to state 29
    DDDOT     shift, and go to state 30
    '('       shift, and go to state 14
    '{'       shift, and go to state 31

    var               go to state 32
    exp               go to state 33
    prefixexp         go to state 34
    functioncall      go to state 35
    function          go to state 36
    tableconstructor  go to state 37
    binopexp          go to state 38


State 5

   17 stat: FOR . NAME '=' exp ',' exp DO block END
   18     | FOR . NAME '=' exp ',' exp ',' exp DO block END
   19     | FOR . namelist IN explist DO block END

    NAME  shift, and go to state 39

    namelist  go to state 40


State 6

   12 stat: DO . block END

    $default  reduce using rule 3 (__stat)

    chunk   go to state 41
    __stat  go to state 2
    block   go to state 42


State 7

   14 stat: REPEAT . block UNTIL exp

    $default  reduce using rule 3 (__stat)

    chunk   go to state 41
    __stat  go to state 2
    block   go to state 43


State 8

    9 laststat: BREAK .

    $default  reduce using rule 9 (laststat)


State 9

   13 stat: WHILE . exp DO block END

    LENGTH    shift, and go to state 21
    NOT       shift, and go to state 22
    '-'       shift, and go to state 23
    NIL       shift, and go to state 24
    FALSE     shift, and go to state 25
    TRUE      shift, and go to state 26
    NUMBER    shift, and go to state 27
    STRING    shift, and go to state 28
    NAME      shift, and go to state 12
    FUNCTION  shift, and go to state 29
    DDDOT     shift, and go to state 30
    '('       shift, and go to state 14
    '{'       shift, and go to state 31

    var               go to state 32
    exp               go to state 44
    prefixexp         go to state 34
    functioncall      go to state 35
    function          go to state 36
    tableconstructor  go to state 37
    binopexp          go to state 38


State 10

   21 stat: LOCAL . FUNCTION NAME funcbody
   22     | LOCAL . namelist
   23     | LOCAL . namelist '=' explist

    NAME      shift, and go to state 45
    FUNCTION  shift, and go to state 46

    namelist  go to state 47


State 11

    7 laststat: RETURN . explist
    8         | RETURN .

    LENGTH    shift, and go to state 21
    NOT       shift, and go to state 22
    '-'       shift, and go to state 23
    NIL       shift, and go to state 24
    FALSE     shift, and go to state 25
    TRUE      shift, and go to state 26
    NUMBER    shift, and go to state 27
    STRING    shift, and go to state 28
    NAME      shift, and go to state 12
    FUNCTION  shift, and go to state 29
    DDDOT     shift, and go to state 30
    '('       shift, and go to state 14
    '{'       shift, and go to state 31

    $default  reduce using rule 8 (laststat)

    var               go to state 32
    explist           go to state 48
    exp               go to state 49
    prefixexp         go to state 34
    functioncall      go to state 35
    function          go to state 36
    tableconstructor  go to state 37
    binopexp          go to state 38


State 12

   32 var: NAME .

    $default  reduce using rule 32 (var)


State 13

   20 stat: FUNCTION . funcname funcbody

    NAME  shift, and go to state 50

    funcname  go to state 51


State 14

   54 prefixexp: '(' . exp ')'

    LENGTH    shift, and go to state 21
    NOT       shift, and go to state 22
    '-'       shift, and go to state 23
    NIL       shift, and go to state 24
    FALSE     shift, and go to state 25
    TRUE      shift, and go to state 26
    NUMBER    shift, and go to state 27
    STRING    shift, and go to state 28
    NAME      shift, and go to state 12
    FUNCTION  shift, and go to state 29
    DDDOT     shift, and go to state 30
    '('       shift, and go to state 14
    '{'       shift, and go to state 31

    var               go to state 32
    exp               go to state 52
    prefixexp         go to state 34
    functioncall      go to state 35
    function          go to state 36
    tableconstructor  go to state 37
    binopexp          go to state 38


State 15

    2 chunk: __stat laststat . _semi

    ';'  shift, and go to state 53

    $default  reduce using rule 5 (_semi)

    _semi  go to state 54


State 16

    4 __stat: __stat stat . _semi

    ';'  shift, and go to state 53

    $default  reduce using rule 5 (_semi)

    _semi  go to state 55


State 17

   11 stat: varlist . '=' explist
   27 varlist: varlist . ',' var

    '='  shift, and go to state 56
    ','  shift, and go to state 57


State 18

   26 varlist: var .
   52 prefixexp: var .

    '='       reduce using rule 26 (varlist)
    ','       reduce using rule 26 (varlist)
    $default  reduce using rule 52 (prefixexp)


State 19

   33 var: prefixexp . '[' exp ']'
   34    | prefixexp . '.' NAME
   56 functioncall: prefixexp . args
   57             | prefixexp . ':' NAME args

    STRING  shift, and go to state 58
    ':'     shift, and go to state 59
    '.'     shift, and go to state 60
    '['     shift, and go to state 61
    '('     shift, and go to state 62
    '{'     shift, and go to state 31

    args              go to state 63
    tableconstructor  go to state 64


State 20

   53 prefixexp: functioncall .
   55 stat: functioncall .

    STRING    reduce using rule 53 (prefixexp)
    ':'       reduce using rule 53 (prefixexp)
    '.'       reduce using rule 53 (prefixexp)
    '['       reduce using rule 53 (prefixexp)
    '('       reduce using rule 53 (prefixexp)
    '('       [reduce using rule 55 (stat)]
    '{'       reduce using rule 53 (prefixexp)
    $default  reduce using rule 55 (stat)


State 21

   51 exp: LENGTH . exp

    LENGTH    shift, and go to state 21
    NOT       shift, and go to state 22
    '-'       shift, and go to state 23
    NIL       shift, and go to state 24
    FALSE     shift, and go to state 25
    TRUE      shift, and go to state 26
    NUMBER    shift, and go to state 27
    STRING    shift, and go to state 28
    NAME      shift, and go to state 12
    FUNCTION  shift, and go to state 29
    DDDOT     shift, and go to state 30
    '('       shift, and go to state 14
    '{'       shift, and go to state 31

    var               go to state 32
    exp               go to state 65
    prefixexp         go to state 34
    functioncall      go to state 35
    function          go to state 36
    tableconstructor  go to state 37
    binopexp          go to state 38


State 22

   50 exp: NOT . exp

    LENGTH    shift, and go to state 21
    NOT       shift, and go to state 22
    '-'       shift, and go to state 23
    NIL       shift, and go to state 24
    FALSE     shift, and go to state 25
    TRUE      shift, and go to state 26
    NUMBER    shift, and go to state 27
    STRING    shift, and go to state 28
    NAME      shift, and go to state 12
    FUNCTION  shift, and go to state 29
    DDDOT     shift, and go to state 30
    '('       shift, and go to state 14
    '{'       shift, and go to state 31

    var               go to state 32
    exp               go to state 66
    prefixexp         go to state 34
    functioncall      go to state 35
    function          go to state 36
    tableconstructor  go to state 37
    binopexp          go to state 38


State 23

   49 exp: '-' . exp

    LENGTH    shift, and go to state 21
    NOT       shift, and go to state 22
    '-'       shift, and go to state 23
    NIL       shift, and go to state 24
    FALSE     shift, and go to state 25
    TRUE      shift, and go to state 26
    NUMBER    shift, and go to state 27
    STRING    shift, and go to state 28
    NAME      shift, and go to state 12
    FUNCTION  shift, and go to state 29
    DDDOT     shift, and go to state 30
    '('       shift, and go to state 14
    '{'       shift, and go to state 31

    var               go to state 32
    exp               go to state 67
    prefixexp         go to state 34
    functioncall      go to state 35
    function          go to state 36
    tableconstructor  go to state 37
    binopexp          go to state 38


State 24

   39 exp: NIL .

    $default  reduce using rule 39 (exp)


State 25

   40 exp: FALSE .

    $default  reduce using rule 40 (exp)


State 26

   41 exp: TRUE .

    $default  reduce using rule 41 (exp)


State 27

   42 exp: NUMBER .

    $default  reduce using rule 42 (exp)


State 28

   43 exp: STRING .

    $default  reduce using rule 43 (exp)


State 29

   62 function: FUNCTION . funcbody

    '('  shift, and go to state 68

    funcbody  go to state 69


State 30

   44 exp: DDDOT .

    $default  reduce using rule 44 (exp)


State 31

   68 tableconstructor: '{' . '}'
   69                 | '{' . fieldlist '}'

    LENGTH    shift, and go to state 21
    NOT       shift, and go to state 22
    '-'       shift, and go to state 23
    NIL       shift, and go to state 24
    FALSE     shift, and go to state 25
    TRUE      shift, and go to state 26
    NUMBER    shift, and go to state 27
    STRING    shift, and go to state 28
    NAME      shift, and go to state 70
    FUNCTION  shift, and go to state 29
    DDDOT     shift, and go to state 30
    '['       shift, and go to state 71
    '('       shift, and go to state 14
    '{'       shift, and go to state 31
    '}'       shift, and go to state 72

    var               go to state 32
    exp               go to state 73
    prefixexp         go to state 34
    functioncall      go to state 35
    function          go to state 36
    tableconstructor  go to state 37
    fieldlist         go to state 74
    __fieldsepfield   go to state 75
    field             go to state 76
    binopexp          go to state 38


State 32

   52 prefixexp: var .

    $default  reduce using rule 52 (prefixexp)


State 33

   15 stat: IF exp . THEN block __elseif END
   16     | IF exp . THEN block __elseif ELSE block END
   79 binopexp: exp . '+' exp
   80         | exp . '-' exp
   81         | exp . '*' exp
   82         | exp . '/' exp
   83         | exp . '^' exp
   84         | exp . '%' exp
   85         | exp . CONCAT exp
   86         | exp . COMP exp
   87         | exp . AND exp
   88         | exp . OR exp

    THEN    shift, and go to state 77
    OR      shift, and go to state 78
    AND     shift, and go to state 79
    COMP    shift, and go to state 80
    CONCAT  shift, and go to state 81
    '+'     shift, and go to state 82
    '-'     shift, and go to state 83
    '*'     shift, and go to state 84
    '%'     shift, and go to state 85
    '/'     shift, and go to state 86
    '^'     shift, and go to state 87


State 34

   33 var: prefixexp . '[' exp ']'
   34    | prefixexp . '.' NAME
   46 exp: prefixexp .
   56 functioncall: prefixexp . args
   57             | prefixexp . ':' NAME args

    STRING  shift, and go to state 58
    ':'     shift, and go to state 59
    '.'     shift, and go to state 60
    '['     shift, and go to state 61
    '('     shift, and go to state 62
    '{'     shift, and go to state 31

    '('       [reduce using rule 46 (exp)]
    $default  reduce using rule 46 (exp)

    args              go to state 63
    tableconstructor  go to state 64


State 35

   53 prefixexp: functioncall .

    $default  reduce using rule 53 (prefixexp)


State 36

   45 exp: function .

    $default  reduce using rule 45 (exp)


State 37

   47 exp: tableconstructor .

    $default  reduce using rule 47 (exp)


State 38

   48 exp: binopexp .

    $default  reduce using rule 48 (exp)


State 39

   17 stat: FOR NAME . '=' exp ',' exp DO block END
   18     | FOR NAME . '=' exp ',' exp ',' exp DO block END
   35 namelist: NAME .

    '='  shift, and go to state 88

    $default  reduce using rule 35 (namelist)


State 40

   19 stat: FOR namelist . IN explist DO block END
   36 namelist: namelist . ',' NAME

    IN   shift, and go to state 89
    ','  shift, and go to state 90


State 41

   10 block: chunk .

    $default  reduce using rule 10 (block)


State 42

   12 stat: DO block . END

    END  shift, and go to state 91


State 43

   14 stat: REPEAT block . UNTIL exp

    UNTIL  shift, and go to state 92


State 44

   13 stat: WHILE exp . DO block END
   79 binopexp: exp . '+' exp
   80         | exp . '-' exp
   81         | exp . '*' exp
   82         | exp . '/' exp
   83         | exp . '^' exp
   84         | exp . '%' exp
   85         | exp . CONCAT exp
   86         | exp . COMP exp
   87         | exp . AND exp
   88         | exp . OR exp

    DO      shift, and go to state 93
    OR      shift, and go to state 78
    AND     shift, and go to state 79
    COMP    shift, and go to state 80
    CONCAT  shift, and go to state 81
    '+'     shift, and go to state 82
    '-'     shift, and go to state 83
    '*'     shift, and go to state 84
    '%'     shift, and go to state 85
    '/'     shift, and go to state 86
    '^'     shift, and go to state 87


State 45

   35 namelist: NAME .

    $default  reduce using rule 35 (namelist)


State 46

   21 stat: LOCAL FUNCTION . NAME funcbody

    NAME  shift, and go to state 94


State 47

   22 stat: LOCAL namelist .
   23     | LOCAL namelist . '=' explist
   36 namelist: namelist . ',' NAME

    '='  shift, and go to state 95
    ','  shift, and go to state 90

    $default  reduce using rule 22 (stat)


State 48

    7 laststat: RETURN explist .
   38 explist: explist . ',' exp

    ','  shift, and go to state 96

    $default  reduce using rule 7 (laststat)


State 49

   37 explist: exp .
   79 binopexp: exp . '+' exp
   80         | exp . '-' exp
   81         | exp . '*' exp
   82         | exp . '/' exp
   83         | exp . '^' exp
   84         | exp . '%' exp
   85         | exp . CONCAT exp
   86         | exp . COMP exp
   87         | exp . AND exp
   88         | exp . OR exp

    OR      shift, and go to state 78
    AND     shift, and go to state 79
    COMP    shift, and go to state 80
    CONCAT  shift, and go to state 81
    '+'     shift, and go to state 82
    '-'     shift, and go to state 83
    '*'     shift, and go to state 84
    '%'     shift, and go to state 85
    '/'     shift, and go to state 86
    '^'     shift, and go to state 87

    $default  reduce using rule 37 (explist)


State 50

   28 funcname: NAME . __dotname
   29         | NAME . __dotname ':' NAME

    $default  reduce using rule 30 (__dotname)

    __dotname  go to state 97


State 51

   20 stat: FUNCTION funcname . funcbody

    '('  shift, and go to state 68

    funcbody  go to state 98


State 52

   54 prefixexp: '(' exp . ')'
   79 binopexp: exp . '+' exp
   80         | exp . '-' exp
   81         | exp . '*' exp
   82         | exp . '/' exp
   83         | exp . '^' exp
   84         | exp . '%' exp
   85         | exp . CONCAT exp
   86         | exp . COMP exp
   87         | exp . AND exp
   88         | exp . OR exp

    OR      shift, and go to state 78
    AND     shift, and go to state 79
    COMP    shift, and go to state 80
    CONCAT  shift, and go to state 81
    '+'     shift, and go to state 82
    '-'     shift, and go to state 83
    '*'     shift, and go to state 84
    '%'     shift, and go to state 85
    '/'     shift, and go to state 86
    '^'     shift, and go to state 87
    ')'     shift, and go to state 99


State 53

    6 _semi: ';' .

    $default  reduce using rule 6 (_semi)


State 54

    2 chunk: __stat laststat _semi .

    $default  reduce using rule 2 (chunk)


State 55

    4 __stat: __stat stat _semi .

    $default  reduce using rule 4 (__stat)


State 56

   11 stat: varlist '=' . explist

    LENGTH    shift, and go to state 21
    NOT       shift, and go to state 22
    '-'       shift, and go to state 23
    NIL       shift, and go to state 24
    FALSE     shift, and go to state 25
    TRUE      shift, and go to state 26
    NUMBER    shift, and go to state 27
    STRING    shift, and go to state 28
    NAME      shift, and go to state 12
    FUNCTION  shift, and go to state 29
    DDDOT     shift, and go to state 30
    '('       shift, and go to state 14
    '{'       shift, and go to state 31

    var               go to state 32
    explist           go to state 100
    exp               go to state 49
    prefixexp         go to state 34
    functioncall      go to state 35
    function          go to state 36
    tableconstructor  go to state 37
    binopexp          go to state 38


State 57

   27 varlist: varlist ',' . var

    NAME  shift, and go to state 12
    '('   shift, and go to state 14

    var           go to state 101
    prefixexp     go to state 19
    functioncall  go to state 35


State 58

   61 args: STRING .

    $default  reduce using rule 61 (args)


State 59

   57 functioncall: prefixexp ':' . NAME args

    NAME  shift, and go to state 102


State 60

   34 var: prefixexp '.' . NAME

    NAME  shift, and go to state 103


State 61

   33 var: prefixexp '[' . exp ']'

    LENGTH    shift, and go to state 21
    NOT       shift, and go to state 22
    '-'       shift, and go to state 23
    NIL       shift, and go to state 24
    FALSE     shift, and go to state 25
    TRUE      shift, and go to state 26
    NUMBER    shift, and go to state 27
    STRING    shift, and go to state 28
    NAME      shift, and go to state 12
    FUNCTION  shift, and go to state 29
    DDDOT     shift, and go to state 30
    '('       shift, and go to state 14
    '{'       shift, and go to state 31

    var               go to state 32
    exp               go to state 104
    prefixexp         go to state 34
    functioncall      go to state 35
    function          go to state 36
    tableconstructor  go to state 37
    binopexp          go to state 38


State 62

   58 args: '(' . ')'
   59     | '(' . explist ')'

    LENGTH    shift, and go to state 21
    NOT       shift, and go to state 22
    '-'       shift, and go to state 23
    NIL       shift, and go to state 24
    FALSE     shift, and go to state 25
    TRUE      shift, and go to state 26
    NUMBER    shift, and go to state 27
    STRING    shift, and go to state 28
    NAME      shift, and go to state 12
    FUNCTION  shift, and go to state 29
    DDDOT     shift, and go to state 30
    '('       shift, and go to state 14
    ')'       shift, and go to state 105
    '{'       shift, and go to state 31

    var               go to state 32
    explist           go to state 106
    exp               go to state 49
    prefixexp         go to state 34
    functioncall      go to state 35
    function          go to state 36
    tableconstructor  go to state 37
    binopexp          go to state 38


State 63

   56 functioncall: prefixexp args .

    $default  reduce using rule 56 (functioncall)


State 64

   60 args: tableconstructor .

    $default  reduce using rule 60 (args)


State 65

   51 exp: LENGTH exp .
   79 binopexp: exp . '+' exp
   80         | exp . '-' exp
   81         | exp . '*' exp
   82         | exp . '/' exp
   83         | exp . '^' exp
   84         | exp . '%' exp
   85         | exp . CONCAT exp
   86         | exp . COMP exp
   87         | exp . AND exp
   88         | exp . OR exp

    '^'  shift, and go to state 87

    $default  reduce using rule 51 (exp)


State 66

   50 exp: NOT exp .
   79 binopexp: exp . '+' exp
   80         | exp . '-' exp
   81         | exp . '*' exp
   82         | exp . '/' exp
   83         | exp . '^' exp
   84         | exp . '%' exp
   85         | exp . CONCAT exp
   86         | exp . COMP exp
   87         | exp . AND exp
   88         | exp . OR exp

    '^'  shift, and go to state 87

    $default  reduce using rule 50 (exp)


State 67

   49 exp: '-' exp .
   79 binopexp: exp . '+' exp
   80         | exp . '-' exp
   81         | exp . '*' exp
   82         | exp . '/' exp
   83         | exp . '^' exp
   84         | exp . '%' exp
   85         | exp . CONCAT exp
   86         | exp . COMP exp
   87         | exp . AND exp
   88         | exp . OR exp

    '*'  shift, and go to state 84
    '%'  shift, and go to state 85
    '/'  shift, and go to state 86
    '^'  shift, and go to state 87

    $default  reduce using rule 49 (exp)


State 68

   63 funcbody: '(' . ')' block END
   64         | '(' . parlist ')' block END

    NAME   shift, and go to state 45
    DDDOT  shift, and go to state 107
    ')'    shift, and go to state 108

    namelist  go to state 109
    parlist   go to state 110


State 69

   62 function: FUNCTION funcbody .

    $default  reduce using rule 62 (function)


State 70

   32 var: NAME .
   75 field: NAME . '=' exp

    '='  shift, and go to state 111

    $default  reduce using rule 32 (var)


State 71

   74 field: '[' . exp ']' '=' exp

    LENGTH    shift, and go to state 21
    NOT       shift, and go to state 22
    '-'       shift, and go to state 23
    NIL       shift, and go to state 24
    FALSE     shift, and go to state 25
    TRUE      shift, and go to state 26
    NUMBER    shift, and go to state 27
    STRING    shift, and go to state 28
    NAME      shift, and go to state 12
    FUNCTION  shift, and go to state 29
    DDDOT     shift, and go to state 30
    '('       shift, and go to state 14
    '{'       shift, and go to state 31

    var               go to state 32
    exp               go to state 112
    prefixexp         go to state 34
    functioncall      go to state 35
    function          go to state 36
    tableconstructor  go to state 37
    binopexp          go to state 38


State 72

   68 tableconstructor: '{' '}' .

    $default  reduce using rule 68 (tableconstructor)


State 73

   76 field: exp .
   79 binopexp: exp . '+' exp
   80         | exp . '-' exp
   81         | exp . '*' exp
   82         | exp . '/' exp
   83         | exp . '^' exp
   84         | exp . '%' exp
   85         | exp . CONCAT exp
   86         | exp . COMP exp
   87         | exp . AND exp
   88         | exp . OR exp

    OR      shift, and go to state 78
    AND     shift, and go to state 79
    COMP    shift, and go to state 80
    CONCAT  shift, and go to state 81
    '+'     shift, and go to state 82
    '-'     shift, and go to state 83
    '*'     shift, and go to state 84
    '%'     shift, and go to state 85
    '/'     shift, and go to state 86
    '^'     shift, and go to state 87

    $default  reduce using rule 76 (field)


State 74

   69 tableconstructor: '{' fieldlist . '}'

    '}'  shift, and go to state 113


State 75

   70 fieldlist: __fieldsepfield .
   71          | __fieldsepfield . fieldsep
   73 __fieldsepfield: __fieldsepfield . fieldsep field

    ';'  shift, and go to state 114
    ','  shift, and go to state 115

    $default  reduce using rule 70 (fieldlist)

    fieldsep  go to state 116


State 76

   72 __fieldsepfield: field .

    $default  reduce using rule 72 (__fieldsepfield)


State 77

   15 stat: IF exp THEN . block __elseif END
   16     | IF exp THEN . block __elseif ELSE block END

    $default  reduce using rule 3 (__stat)

    chunk   go to state 41
    __stat  go to state 2
    block   go to state 117


State 78

   88 binopexp: exp OR . exp

    LENGTH    shift, and go to state 21
    NOT       shift, and go to state 22
    '-'       shift, and go to state 23
    NIL       shift, and go to state 24
    FALSE     shift, and go to state 25
    TRUE      shift, and go to state 26
    NUMBER    shift, and go to state 27
    STRING    shift, and go to state 28
    NAME      shift, and go to state 12
    FUNCTION  shift, and go to state 29
    DDDOT     shift, and go to state 30
    '('       shift, and go to state 14
    '{'       shift, and go to state 31

    var               go to state 32
    exp               go to state 118
    prefixexp         go to state 34
    functioncall      go to state 35
    function          go to state 36
    tableconstructor  go to state 37
    binopexp          go to state 38


State 79

   87 binopexp: exp AND . exp

    LENGTH    shift, and go to state 21
    NOT       shift, and go to state 22
    '-'       shift, and go to state 23
    NIL       shift, and go to state 24
    FALSE     shift, and go to state 25
    TRUE      shift, and go to state 26
    NUMBER    shift, and go to state 27
    STRING    shift, and go to state 28
    NAME      shift, and go to state 12
    FUNCTION  shift, and go to state 29
    DDDOT     shift, and go to state 30
    '('       shift, and go to state 14
    '{'       shift, and go to state 31

    var               go to state 32
    exp               go to state 119
    prefixexp         go to state 34
    functioncall      go to state 35
    function          go to state 36
    tableconstructor  go to state 37
    binopexp          go to state 38


State 80

   86 binopexp: exp COMP . exp

    LENGTH    shift, and go to state 21
    NOT       shift, and go to state 22
    '-'       shift, and go to state 23
    NIL       shift, and go to state 24
    FALSE     shift, and go to state 25
    TRUE      shift, and go to state 26
    NUMBER    shift, and go to state 27
    STRING    shift, and go to state 28
    NAME      shift, and go to state 12
    FUNCTION  shift, and go to state 29
    DDDOT     shift, and go to state 30
    '('       shift, and go to state 14
    '{'       shift, and go to state 31

    var               go to state 32
    exp               go to state 120
    prefixexp         go to state 34
    functioncall      go to state 35
    function          go to state 36
    tableconstructor  go to state 37
    binopexp          go to state 38


State 81

   85 binopexp: exp CONCAT . exp

    LENGTH    shift, and go to state 21
    NOT       shift, and go to state 22
    '-'       shift, and go to state 23
    NIL       shift, and go to state 24
    FALSE     shift, and go to state 25
    TRUE      shift, and go to state 26
    NUMBER    shift, and go to state 27
    STRING    shift, and go to state 28
    NAME      shift, and go to state 12
    FUNCTION  shift, and go to state 29
    DDDOT     shift, and go to state 30
    '('       shift, and go to state 14
    '{'       shift, and go to state 31

    var               go to state 32
    exp               go to state 121
    prefixexp         go to state 34
    functioncall      go to state 35
    function          go to state 36
    tableconstructor  go to state 37
    binopexp          go to state 38


State 82

   79 binopexp: exp '+' . exp

    LENGTH    shift, and go to state 21
    NOT       shift, and go to state 22
    '-'       shift, and go to state 23
    NIL       shift, and go to state 24
    FALSE     shift, and go to state 25
    TRUE      shift, and go to state 26
    NUMBER    shift, and go to state 27
    STRING    shift, and go to state 28
    NAME      shift, and go to state 12
    FUNCTION  shift, and go to state 29
    DDDOT     shift, and go to state 30
    '('       shift, and go to state 14
    '{'       shift, and go to state 31

    var               go to state 32
    exp               go to state 122
    prefixexp         go to state 34
    functioncall      go to state 35
    function          go to state 36
    tableconstructor  go to state 37
    binopexp          go to state 38


State 83

   80 binopexp: exp '-' . exp

    LENGTH    shift, and go to state 21
    NOT       shift, and go to state 22
    '-'       shift, and go to state 23
    NIL       shift, and go to state 24
    FALSE     shift, and go to state 25
    TRUE      shift, and go to state 26
    NUMBER    shift, and go to state 27
    STRING    shift, and go to state 28
    NAME      shift, and go to state 12
    FUNCTION  shift, and go to state 29
    DDDOT     shift, and go to state 30
    '('       shift, and go to state 14
    '{'       shift, and go to state 31

    var               go to state 32
    exp               go to state 123
    prefixexp         go to state 34
    functioncall      go to state 35
    function          go to state 36
    tableconstructor  go to state 37
    binopexp          go to state 38


State 84

   81 binopexp: exp '*' . exp

    LENGTH    shift, and go to state 21
    NOT       shift, and go to state 22
    '-'       shift, and go to state 23
    NIL       shift, and go to state 24
    FALSE     shift, and go to state 25
    TRUE      shift, and go to state 26
    NUMBER    shift, and go to state 27
    STRING    shift, and go to state 28
    NAME      shift, and go to state 12
    FUNCTION  shift, and go to state 29
    DDDOT     shift, and go to state 30
    '('       shift, and go to state 14
    '{'       shift, and go to state 31

    var               go to state 32
    exp               go to state 124
    prefixexp         go to state 34
    functioncall      go to state 35
    function          go to state 36
    tableconstructor  go to state 37
    binopexp          go to state 38


State 85

   84 binopexp: exp '%' . exp

    LENGTH    shift, and go to state 21
    NOT       shift, and go to state 22
    '-'       shift, and go to state 23
    NIL       shift, and go to state 24
    FALSE     shift, and go to state 25
    TRUE      shift, and go to state 26
    NUMBER    shift, and go to state 27
    STRING    shift, and go to state 28
    NAME      shift, and go to state 12
    FUNCTION  shift, and go to state 29
    DDDOT     shift, and go to state 30
    '('       shift, and go to state 14
    '{'       shift, and go to state 31

    var               go to state 32
    exp               go to state 125
    prefixexp         go to state 34
    functioncall      go to state 35
    function          go to state 36
    tableconstructor  go to state 37
    binopexp          go to state 38


State 86

   82 binopexp: exp '/' . exp

    LENGTH    shift, and go to state 21
    NOT       shift, and go to state 22
    '-'       shift, and go to state 23
    NIL       shift, and go to state 24
    FALSE     shift, and go to state 25
    TRUE      shift, and go to state 26
    NUMBER    shift, and go to state 27
    STRING    shift, and go to state 28
    NAME      shift, and go to state 12
    FUNCTION  shift, and go to state 29
    DDDOT     shift, and go to state 30
    '('       shift, and go to state 14
    '{'       shift, and go to state 31

    var               go to state 32
    exp               go to state 126
    prefixexp         go to state 34
    functioncall      go to state 35
    function          go to state 36
    tableconstructor  go to state 37
    binopexp          go to state 38


State 87

   83 binopexp: exp '^' . exp

    LENGTH    shift, and go to state 21
    NOT       shift, and go to state 22
    '-'       shift, and go to state 23
    NIL       shift, and go to state 24
    FALSE     shift, and go to state 25
    TRUE      shift, and go to state 26
    NUMBER    shift, and go to state 27
    STRING    shift, and go to state 28
    NAME      shift, and go to state 12
    FUNCTION  shift, and go to state 29
    DDDOT     shift, and go to state 30
    '('       shift, and go to state 14
    '{'       shift, and go to state 31

    var               go to state 32
    exp               go to state 127
    prefixexp         go to state 34
    functioncall      go to state 35
    function          go to state 36
    tableconstructor  go to state 37
    binopexp          go to state 38


State 88

   17 stat: FOR NAME '=' . exp ',' exp DO block END
   18     | FOR NAME '=' . exp ',' exp ',' exp DO block END

    LENGTH    shift, and go to state 21
    NOT       shift, and go to state 22
    '-'       shift, and go to state 23
    NIL       shift, and go to state 24
    FALSE     shift, and go to state 25
    TRUE      shift, and go to state 26
    NUMBER    shift, and go to state 27
    STRING    shift, and go to state 28
    NAME      shift, and go to state 12
    FUNCTION  shift, and go to state 29
    DDDOT     shift, and go to state 30
    '('       shift, and go to state 14
    '{'       shift, and go to state 31

    var               go to state 32
    exp               go to state 128
    prefixexp         go to state 34
    functioncall      go to state 35
    function          go to state 36
    tableconstructor  go to state 37
    binopexp          go to state 38


State 89

   19 stat: FOR namelist IN . explist DO block END

    LENGTH    shift, and go to state 21
    NOT       shift, and go to state 22
    '-'       shift, and go to state 23
    NIL       shift, and go to state 24
    FALSE     shift, and go to state 25
    TRUE      shift, and go to state 26
    NUMBER    shift, and go to state 27
    STRING    shift, and go to state 28
    NAME      shift, and go to state 12
    FUNCTION  shift, and go to state 29
    DDDOT     shift, and go to state 30
    '('       shift, and go to state 14
    '{'       shift, and go to state 31

    var               go to state 32
    explist           go to state 129
    exp               go to state 49
    prefixexp         go to state 34
    functioncall      go to state 35
    function          go to state 36
    tableconstructor  go to state 37
    binopexp          go to state 38


State 90

   36 namelist: namelist ',' . NAME

    NAME  shift, and go to state 130


State 91

   12 stat: DO block END .

    $default  reduce using rule 12 (stat)


State 92

   14 stat: REPEAT block UNTIL . exp

    LENGTH    shift, and go to state 21
    NOT       shift, and go to state 22
    '-'       shift, and go to state 23
    NIL       shift, and go to state 24
    FALSE     shift, and go to state 25
    TRUE      shift, and go to state 26
    NUMBER    shift, and go to state 27
    STRING    shift, and go to state 28
    NAME      shift, and go to state 12
    FUNCTION  shift, and go to state 29
    DDDOT     shift, and go to state 30
    '('       shift, and go to state 14
    '{'       shift, and go to state 31

    var               go to state 32
    exp               go to state 131
    prefixexp         go to state 34
    functioncall      go to state 35
    function          go to state 36
    tableconstructor  go to state 37
    binopexp          go to state 38


State 93

   13 stat: WHILE exp DO . block END

    $default  reduce using rule 3 (__stat)

    chunk   go to state 41
    __stat  go to state 2
    block   go to state 132


State 94

   21 stat: LOCAL FUNCTION NAME . funcbody

    '('  shift, and go to state 68

    funcbody  go to state 133


State 95

   23 stat: LOCAL namelist '=' . explist

    LENGTH    shift, and go to state 21
    NOT       shift, and go to state 22
    '-'       shift, and go to state 23
    NIL       shift, and go to state 24
    FALSE     shift, and go to state 25
    TRUE      shift, and go to state 26
    NUMBER    shift, and go to state 27
    STRING    shift, and go to state 28
    NAME      shift, and go to state 12
    FUNCTION  shift, and go to state 29
    DDDOT     shift, and go to state 30
    '('       shift, and go to state 14
    '{'       shift, and go to state 31

    var               go to state 32
    explist           go to state 134
    exp               go to state 49
    prefixexp         go to state 34
    functioncall      go to state 35
    function          go to state 36
    tableconstructor  go to state 37
    binopexp          go to state 38


State 96

   38 explist: explist ',' . exp

    LENGTH    shift, and go to state 21
    NOT       shift, and go to state 22
    '-'       shift, and go to state 23
    NIL       shift, and go to state 24
    FALSE     shift, and go to state 25
    TRUE      shift, and go to state 26
    NUMBER    shift, and go to state 27
    STRING    shift, and go to state 28
    NAME      shift, and go to state 12
    FUNCTION  shift, and go to state 29
    DDDOT     shift, and go to state 30
    '('       shift, and go to state 14
    '{'       shift, and go to state 31

    var               go to state 32
    exp               go to state 135
    prefixexp         go to state 34
    functioncall      go to state 35
    function          go to state 36
    tableconstructor  go to state 37
    binopexp          go to state 38


State 97

   28 funcname: NAME __dotname .
   29         | NAME __dotname . ':' NAME
   31 __dotname: __dotname . '.' NAME

    ':'  shift, and go to state 136
    '.'  shift, and go to state 137

    $default  reduce using rule 28 (funcname)


State 98

   20 stat: FUNCTION funcname funcbody .

    $default  reduce using rule 20 (stat)


State 99

   54 prefixexp: '(' exp ')' .

    $default  reduce using rule 54 (prefixexp)


State 100

   11 stat: varlist '=' explist .
   38 explist: explist . ',' exp

    ','  shift, and go to state 96

    $default  reduce using rule 11 (stat)


State 101

   27 varlist: varlist ',' var .
   52 prefixexp: var .

    '='       reduce using rule 27 (varlist)
    ','       reduce using rule 27 (varlist)
    $default  reduce using rule 52 (prefixexp)


State 102

   57 functioncall: prefixexp ':' NAME . args

    STRING  shift, and go to state 58
    '('     shift, and go to state 62
    '{'     shift, and go to state 31

    args              go to state 138
    tableconstructor  go to state 64


State 103

   34 var: prefixexp '.' NAME .

    $default  reduce using rule 34 (var)


State 104

   33 var: prefixexp '[' exp . ']'
   79 binopexp: exp . '+' exp
   80         | exp . '-' exp
   81         | exp . '*' exp
   82         | exp . '/' exp
   83         | exp . '^' exp
   84         | exp . '%' exp
   85         | exp . CONCAT exp
   86         | exp . COMP exp
   87         | exp . AND exp
   88         | exp . OR exp

    OR      shift, and go to state 78
    AND     shift, and go to state 79
    COMP    shift, and go to state 80
    CONCAT  shift, and go to state 81
    '+'     shift, and go to state 82
    '-'     shift, and go to state 83
    '*'     shift, and go to state 84
    '%'     shift, and go to state 85
    '/'     shift, and go to state 86
    '^'     shift, and go to state 87
    ']'     shift, and go to state 139


State 105

   58 args: '(' ')' .

    $default  reduce using rule 58 (args)


State 106

   38 explist: explist . ',' exp
   59 args: '(' explist . ')'

    ','  shift, and go to state 96
    ')'  shift, and go to state 140


State 107

   67 parlist: DDDOT .

    $default  reduce using rule 67 (parlist)


State 108

   63 funcbody: '(' ')' . block END

    $default  reduce using rule 3 (__stat)

    chunk   go to state 41
    __stat  go to state 2
    block   go to state 141


State 109

   36 namelist: namelist . ',' NAME
   65 parlist: namelist .
   66        | namelist . ',' DDDOT

    ','  shift, and go to state 142

    $default  reduce using rule 65 (parlist)


State 110

   64 funcbody: '(' parlist . ')' block END

    ')'  shift, and go to state 143


State 111

   75 field: NAME '=' . exp

    LENGTH    shift, and go to state 21
    NOT       shift, and go to state 22
    '-'       shift, and go to state 23
    NIL       shift, and go to state 24
    FALSE     shift, and go to state 25
    TRUE      shift, and go to state 26
    NUMBER    shift, and go to state 27
    STRING    shift, and go to state 28
    NAME      shift, and go to state 12
    FUNCTION  shift, and go to state 29
    DDDOT     shift, and go to state 30
    '('       shift, and go to state 14
    '{'       shift, and go to state 31

    var               go to state 32
    exp               go to state 144
    prefixexp         go to state 34
    functioncall      go to state 35
    function          go to state 36
    tableconstructor  go to state 37
    binopexp          go to state 38


State 112

   74 field: '[' exp . ']' '=' exp
   79 binopexp: exp . '+' exp
   80         | exp . '-' exp
   81         | exp . '*' exp
   82         | exp . '/' exp
   83         | exp . '^' exp
   84         | exp . '%' exp
   85         | exp . CONCAT exp
   86         | exp . COMP exp
   87         | exp . AND exp
   88         | exp . OR exp

    OR      shift, and go to state 78
    AND     shift, and go to state 79
    COMP    shift, and go to state 80
    CONCAT  shift, and go to state 81
    '+'     shift, and go to state 82
    '-'     shift, and go to state 83
    '*'     shift, and go to state 84
    '%'     shift, and go to state 85
    '/'     shift, and go to state 86
    '^'     shift, and go to state 87
    ']'     shift, and go to state 145


State 113

   69 tableconstructor: '{' fieldlist '}' .

    $default  reduce using rule 69 (tableconstructor)


State 114

   78 fieldsep: ';' .

    $default  reduce using rule 78 (fieldsep)


State 115

   77 fieldsep: ',' .

    $default  reduce using rule 77 (fieldsep)


State 116

   71 fieldlist: __fieldsepfield fieldsep .
   73 __fieldsepfield: __fieldsepfield fieldsep . field

    LENGTH    shift, and go to state 21
    NOT       shift, and go to state 22
    '-'       shift, and go to state 23
    NIL       shift, and go to state 24
    FALSE     shift, and go to state 25
    TRUE      shift, and go to state 26
    NUMBER    shift, and go to state 27
    STRING    shift, and go to state 28
    NAME      shift, and go to state 70
    FUNCTION  shift, and go to state 29
    DDDOT     shift, and go to state 30
    '['       shift, and go to state 71
    '('       shift, and go to state 14
    '{'       shift, and go to state 31

    $default  reduce using rule 71 (fieldlist)

    var               go to state 32
    exp               go to state 73
    prefixexp         go to state 34
    functioncall      go to state 35
    function          go to state 36
    tableconstructor  go to state 37
    field             go to state 146
    binopexp          go to state 38


State 117

   15 stat: IF exp THEN block . __elseif END
   16     | IF exp THEN block . __elseif ELSE block END

    $default  reduce using rule 24 (__elseif)

    __elseif  go to state 147


State 118

   79 binopexp: exp . '+' exp
   80         | exp . '-' exp
   81         | exp . '*' exp
   82         | exp . '/' exp
   83         | exp . '^' exp
   84         | exp . '%' exp
   85         | exp . CONCAT exp
   86         | exp . COMP exp
   87         | exp . AND exp
   88         | exp . OR exp
   88         | exp OR exp .

    AND     shift, and go to state 79
    COMP    shift, and go to state 80
    CONCAT  shift, and go to state 81
    '+'     shift, and go to state 82
    '-'     shift, and go to state 83
    '*'     shift, and go to state 84
    '%'     shift, and go to state 85
    '/'     shift, and go to state 86
    '^'     shift, and go to state 87

    $default  reduce using rule 88 (binopexp)


State 119

   79 binopexp: exp . '+' exp
   80         | exp . '-' exp
   81         | exp . '*' exp
   82         | exp . '/' exp
   83         | exp . '^' exp
   84         | exp . '%' exp
   85         | exp . CONCAT exp
   86         | exp . COMP exp
   87         | exp . AND exp
   87         | exp AND exp .
   88         | exp . OR exp

    COMP    shift, and go to state 80
    CONCAT  shift, and go to state 81
    '+'     shift, and go to state 82
    '-'     shift, and go to state 83
    '*'     shift, and go to state 84
    '%'     shift, and go to state 85
    '/'     shift, and go to state 86
    '^'     shift, and go to state 87

    $default  reduce using rule 87 (binopexp)


State 120

   79 binopexp: exp . '+' exp
   80         | exp . '-' exp
   81         | exp . '*' exp
   82         | exp . '/' exp
   83         | exp . '^' exp
   84         | exp . '%' exp
   85         | exp . CONCAT exp
   86         | exp . COMP exp
   86         | exp COMP exp .
   87         | exp . AND exp
   88         | exp . OR exp

    CONCAT  shift, and go to state 81
    '+'     shift, and go to state 82
    '-'     shift, and go to state 83
    '*'     shift, and go to state 84
    '%'     shift, and go to state 85
    '/'     shift, and go to state 86
    '^'     shift, and go to state 87

    $default  reduce using rule 86 (binopexp)


State 121

   79 binopexp: exp . '+' exp
   80         | exp . '-' exp
   81         | exp . '*' exp
   82         | exp . '/' exp
   83         | exp . '^' exp
   84         | exp . '%' exp
   85         | exp . CONCAT exp
   85         | exp CONCAT exp .
   86         | exp . COMP exp
   87         | exp . AND exp
   88         | exp . OR exp

    CONCAT  shift, and go to state 81
    '+'     shift, and go to state 82
    '-'     shift, and go to state 83
    '*'     shift, and go to state 84
    '%'     shift, and go to state 85
    '/'     shift, and go to state 86
    '^'     shift, and go to state 87

    $default  reduce using rule 85 (binopexp)


State 122

   79 binopexp: exp . '+' exp
   79         | exp '+' exp .
   80         | exp . '-' exp
   81         | exp . '*' exp
   82         | exp . '/' exp
   83         | exp . '^' exp
   84         | exp . '%' exp
   85         | exp . CONCAT exp
   86         | exp . COMP exp
   87         | exp . AND exp
   88         | exp . OR exp

    '*'  shift, and go to state 84
    '%'  shift, and go to state 85
    '/'  shift, and go to state 86
    '^'  shift, and go to state 87

    $default  reduce using rule 79 (binopexp)


State 123

   79 binopexp: exp . '+' exp
   80         | exp . '-' exp
   80         | exp '-' exp .
   81         | exp . '*' exp
   82         | exp . '/' exp
   83         | exp . '^' exp
   84         | exp . '%' exp
   85         | exp . CONCAT exp
   86         | exp . COMP exp
   87         | exp . AND exp
   88         | exp . OR exp

    '*'  shift, and go to state 84
    '%'  shift, and go to state 85
    '/'  shift, and go to state 86
    '^'  shift, and go to state 87

    $default  reduce using rule 80 (binopexp)


State 124

   79 binopexp: exp . '+' exp
   80         | exp . '-' exp
   81         | exp . '*' exp
   81         | exp '*' exp .
   82         | exp . '/' exp
   83         | exp . '^' exp
   84         | exp . '%' exp
   85         | exp . CONCAT exp
   86         | exp . COMP exp
   87         | exp . AND exp
   88         | exp . OR exp

    '/'  shift, and go to state 86
    '^'  shift, and go to state 87

    $default  reduce using rule 81 (binopexp)


State 125

   79 binopexp: exp . '+' exp
   80         | exp . '-' exp
   81         | exp . '*' exp
   82         | exp . '/' exp
   83         | exp . '^' exp
   84         | exp . '%' exp
   84         | exp '%' exp .
   85         | exp . CONCAT exp
   86         | exp . COMP exp
   87         | exp . AND exp
   88         | exp . OR exp

    '/'  shift, and go to state 86
    '^'  shift, and go to state 87

    $default  reduce using rule 84 (binopexp)


State 126

   79 binopexp: exp . '+' exp
   80         | exp . '-' exp
   81         | exp . '*' exp
   82         | exp . '/' exp
   82         | exp '/' exp .
   83         | exp . '^' exp
   84         | exp . '%' exp
   85         | exp . CONCAT exp
   86         | exp . COMP exp
   87         | exp . AND exp
   88         | exp . OR exp

    '^'  shift, and go to state 87

    $default  reduce using rule 82 (binopexp)


State 127

   79 binopexp: exp . '+' exp
   80         | exp . '-' exp
   81         | exp . '*' exp
   82         | exp . '/' exp
   83         | exp . '^' exp
   83         | exp '^' exp .
   84         | exp . '%' exp
   85         | exp . CONCAT exp
   86         | exp . COMP exp
   87         | exp . AND exp
   88         | exp . OR exp

    '^'  shift, and go to state 87

    $default  reduce using rule 83 (binopexp)


State 128

   17 stat: FOR NAME '=' exp . ',' exp DO block END
   18     | FOR NAME '=' exp . ',' exp ',' exp DO block END
   79 binopexp: exp . '+' exp
   80         | exp . '-' exp
   81         | exp . '*' exp
   82         | exp . '/' exp
   83         | exp . '^' exp
   84         | exp . '%' exp
   85         | exp . CONCAT exp
   86         | exp . COMP exp
   87         | exp . AND exp
   88         | exp . OR exp

    OR      shift, and go to state 78
    AND     shift, and go to state 79
    COMP    shift, and go to state 80
    CONCAT  shift, and go to state 81
    '+'     shift, and go to state 82
    '-'     shift, and go to state 83
    '*'     shift, and go to state 84
    '%'     shift, and go to state 85
    '/'     shift, and go to state 86
    '^'     shift, and go to state 87
    ','     shift, and go to state 148


State 129

   19 stat: FOR namelist IN explist . DO block END
   38 explist: explist . ',' exp

    DO   shift, and go to state 149
    ','  shift, and go to state 96


State 130

   36 namelist: namelist ',' NAME .

    $default  reduce using rule 36 (namelist)


State 131

   14 stat: REPEAT block UNTIL exp .
   79 binopexp: exp . '+' exp
   80         | exp . '-' exp
   81         | exp . '*' exp
   82         | exp . '/' exp
   83         | exp . '^' exp
   84         | exp . '%' exp
   85         | exp . CONCAT exp
   86         | exp . COMP exp
   87         | exp . AND exp
   88         | exp . OR exp

    OR      shift, and go to state 78
    AND     shift, and go to state 79
    COMP    shift, and go to state 80
    CONCAT  shift, and go to state 81
    '+'     shift, and go to state 82
    '-'     shift, and go to state 83
    '*'     shift, and go to state 84
    '%'     shift, and go to state 85
    '/'     shift, and go to state 86
    '^'     shift, and go to state 87

    $default  reduce using rule 14 (stat)


State 132

   13 stat: WHILE exp DO block . END

    END  shift, and go to state 150


State 133

   21 stat: LOCAL FUNCTION NAME funcbody .

    $default  reduce using rule 21 (stat)


State 134

   23 stat: LOCAL namelist '=' explist .
   38 explist: explist . ',' exp

    ','  shift, and go to state 96

    $default  reduce using rule 23 (stat)


State 135

   38 explist: explist ',' exp .
   79 binopexp: exp . '+' exp
   80         | exp . '-' exp
   81         | exp . '*' exp
   82         | exp . '/' exp
   83         | exp . '^' exp
   84         | exp . '%' exp
   85         | exp . CONCAT exp
   86         | exp . COMP exp
   87         | exp . AND exp
   88         | exp . OR exp

    OR      shift, and go to state 78
    AND     shift, and go to state 79
    COMP    shift, and go to state 80
    CONCAT  shift, and go to state 81
    '+'     shift, and go to state 82
    '-'     shift, and go to state 83
    '*'     shift, and go to state 84
    '%'     shift, and go to state 85
    '/'     shift, and go to state 86
    '^'     shift, and go to state 87

    $default  reduce using rule 38 (explist)


State 136

   29 funcname: NAME __dotname ':' . NAME

    NAME  shift, and go to state 151


State 137

   31 __dotname: __dotname '.' . NAME

    NAME  shift, and go to state 152


State 138

   57 functioncall: prefixexp ':' NAME args .

    $default  reduce using rule 57 (functioncall)


State 139

   33 var: prefixexp '[' exp ']' .

    $default  reduce using rule 33 (var)


State 140

   59 args: '(' explist ')' .

    $default  reduce using rule 59 (args)


State 141

   63 funcbody: '(' ')' block . END

    END  shift, and go to state 153


State 142

   36 namelist: namelist ',' . NAME
   66 parlist: namelist ',' . DDDOT

    NAME   shift, and go to state 130
    DDDOT  shift, and go to state 154


State 143

   64 funcbody: '(' parlist ')' . block END

    $default  reduce using rule 3 (__stat)

    chunk   go to state 41
    __stat  go to state 2
    block   go to state 155


State 144

   75 field: NAME '=' exp .
   79 binopexp: exp . '+' exp
   80         | exp . '-' exp
   81         | exp . '*' exp
   82         | exp . '/' exp
   83         | exp . '^' exp
   84         | exp . '%' exp
   85         | exp . CONCAT exp
   86         | exp . COMP exp
   87         | exp . AND exp
   88         | exp . OR exp

    OR      shift, and go to state 78
    AND     shift, and go to state 79
    COMP    shift, and go to state 80
    CONCAT  shift, and go to state 81
    '+'     shift, and go to state 82
    '-'     shift, and go to state 83
    '*'     shift, and go to state 84
    '%'     shift, and go to state 85
    '/'     shift, and go to state 86
    '^'     shift, and go to state 87

    $default  reduce using rule 75 (field)


State 145

   74 field: '[' exp ']' . '=' exp

    '='  shift, and go to state 156


State 146

   73 __fieldsepfield: __fieldsepfield fieldsep field .

    $default  reduce using rule 73 (__fieldsepfield)


State 147

   15 stat: IF exp THEN block __elseif . END
   16     | IF exp THEN block __elseif . ELSE block END
   25 __elseif: __elseif . ELSEIF exp THEN block

    ELSEIF  shift, and go to state 157
    ELSE    shift, and go to state 158
    END     shift, and go to state 159


State 148

   17 stat: FOR NAME '=' exp ',' . exp DO block END
   18     | FOR NAME '=' exp ',' . exp ',' exp DO block END

    LENGTH    shift, and go to state 21
    NOT       shift, and go to state 22
    '-'       shift, and go to state 23
    NIL       shift, and go to state 24
    FALSE     shift, and go to state 25
    TRUE      shift, and go to state 26
    NUMBER    shift, and go to state 27
    STRING    shift, and go to state 28
    NAME      shift, and go to state 12
    FUNCTION  shift, and go to state 29
    DDDOT     shift, and go to state 30
    '('       shift, and go to state 14
    '{'       shift, and go to state 31

    var               go to state 32
    exp               go to state 160
    prefixexp         go to state 34
    functioncall      go to state 35
    function          go to state 36
    tableconstructor  go to state 37
    binopexp          go to state 38


State 149

   19 stat: FOR namelist IN explist DO . block END

    $default  reduce using rule 3 (__stat)

    chunk   go to state 41
    __stat  go to state 2
    block   go to state 161


State 150

   13 stat: WHILE exp DO block END .

    $default  reduce using rule 13 (stat)


State 151

   29 funcname: NAME __dotname ':' NAME .

    $default  reduce using rule 29 (funcname)


State 152

   31 __dotname: __dotname '.' NAME .

    $default  reduce using rule 31 (__dotname)


State 153

   63 funcbody: '(' ')' block END .

    $default  reduce using rule 63 (funcbody)


State 154

   66 parlist: namelist ',' DDDOT .

    $default  reduce using rule 66 (parlist)


State 155

   64 funcbody: '(' parlist ')' block . END

    END  shift, and go to state 162


State 156

   74 field: '[' exp ']' '=' . exp

    LENGTH    shift, and go to state 21
    NOT       shift, and go to state 22
    '-'       shift, and go to state 23
    NIL       shift, and go to state 24
    FALSE     shift, and go to state 25
    TRUE      shift, and go to state 26
    NUMBER    shift, and go to state 27
    STRING    shift, and go to state 28
    NAME      shift, and go to state 12
    FUNCTION  shift, and go to state 29
    DDDOT     shift, and go to state 30
    '('       shift, and go to state 14
    '{'       shift, and go to state 31

    var               go to state 32
    exp               go to state 163
    prefixexp         go to state 34
    functioncall      go to state 35
    function          go to state 36
    tableconstructor  go to state 37
    binopexp          go to state 38


State 157

   25 __elseif: __elseif ELSEIF . exp THEN block

    LENGTH    shift, and go to state 21
    NOT       shift, and go to state 22
    '-'       shift, and go to state 23
    NIL       shift, and go to state 24
    FALSE     shift, and go to state 25
    TRUE      shift, and go to state 26
    NUMBER    shift, and go to state 27
    STRING    shift, and go to state 28
    NAME      shift, and go to state 12
    FUNCTION  shift, and go to state 29
    DDDOT     shift, and go to state 30
    '('       shift, and go to state 14
    '{'       shift, and go to state 31

    var               go to state 32
    exp               go to state 164
    prefixexp         go to state 34
    functioncall      go to state 35
    function          go to state 36
    tableconstructor  go to state 37
    binopexp          go to state 38


State 158

   16 stat: IF exp THEN block __elseif ELSE . block END

    $default  reduce using rule 3 (__stat)

    chunk   go to state 41
    __stat  go to state 2
    block   go to state 165


State 159

   15 stat: IF exp THEN block __elseif END .

    $default  reduce using rule 15 (stat)


State 160

   17 stat: FOR NAME '=' exp ',' exp . DO block END
   18     | FOR NAME '=' exp ',' exp . ',' exp DO block END
   79 binopexp: exp . '+' exp
   80         | exp . '-' exp
   81         | exp . '*' exp
   82         | exp . '/' exp
   83         | exp . '^' exp
   84         | exp . '%' exp
   85         | exp . CONCAT exp
   86         | exp . COMP exp
   87         | exp . AND exp
   88         | exp . OR exp

    DO      shift, and go to state 166
    OR      shift, and go to state 78
    AND     shift, and go to state 79
    COMP    shift, and go to state 80
    CONCAT  shift, and go to state 81
    '+'     shift, and go to state 82
    '-'     shift, and go to state 83
    '*'     shift, and go to state 84
    '%'     shift, and go to state 85
    '/'     shift, and go to state 86
    '^'     shift, and go to state 87
    ','     shift, and go to state 167


State 161

   19 stat: FOR namelist IN explist DO block . END

    END  shift, and go to state 168


State 162

   64 funcbody: '(' parlist ')' block END .

    $default  reduce using rule 64 (funcbody)


State 163

   74 field: '[' exp ']' '=' exp .
   79 binopexp: exp . '+' exp
   80         | exp . '-' exp
   81         | exp . '*' exp
   82         | exp . '/' exp
   83         | exp . '^' exp
   84         | exp . '%' exp
   85         | exp . CONCAT exp
   86         | exp . COMP exp
   87         | exp . AND exp
   88         | exp . OR exp

    OR      shift, and go to state 78
    AND     shift, and go to state 79
    COMP    shift, and go to state 80
    CONCAT  shift, and go to state 81
    '+'     shift, and go to state 82
    '-'     shift, and go to state 83
    '*'     shift, and go to state 84
    '%'     shift, and go to state 85
    '/'     shift, and go to state 86
    '^'     shift, and go to state 87

    $default  reduce using rule 74 (field)


State 164

   25 __elseif: __elseif ELSEIF exp . THEN block
   79 binopexp: exp . '+' exp
   80         | exp . '-' exp
   81         | exp . '*' exp
   82         | exp . '/' exp
   83         | exp . '^' exp
   84         | exp . '%' exp
   85         | exp . CONCAT exp
   86         | exp . COMP exp
   87         | exp . AND exp
   88         | exp . OR exp

    THEN    shift, and go to state 169
    OR      shift, and go to state 78
    AND     shift, and go to state 79
    COMP    shift, and go to state 80
    CONCAT  shift, and go to state 81
    '+'     shift, and go to state 82
    '-'     shift, and go to state 83
    '*'     shift, and go to state 84
    '%'     shift, and go to state 85
    '/'     shift, and go to state 86
    '^'     shift, and go to state 87


State 165

   16 stat: IF exp THEN block __elseif ELSE block . END

    END  shift, and go to state 170


State 166

   17 stat: FOR NAME '=' exp ',' exp DO . block END

    $default  reduce using rule 3 (__stat)

    chunk   go to state 41
    __stat  go to state 2
    block   go to state 171


State 167

   18 stat: FOR NAME '=' exp ',' exp ',' . exp DO block END

    LENGTH    shift, and go to state 21
    NOT       shift, and go to state 22
    '-'       shift, and go to state 23
    NIL       shift, and go to state 24
    FALSE     shift, and go to state 25
    TRUE      shift, and go to state 26
    NUMBER    shift, and go to state 27
    STRING    shift, and go to state 28
    NAME      shift, and go to state 12
    FUNCTION  shift, and go to state 29
    DDDOT     shift, and go to state 30
    '('       shift, and go to state 14
    '{'       shift, and go to state 31

    var               go to state 32
    exp               go to state 172
    prefixexp         go to state 34
    functioncall      go to state 35
    function          go to state 36
    tableconstructor  go to state 37
    binopexp          go to state 38


State 168

   19 stat: FOR namelist IN explist DO block END .

    $default  reduce using rule 19 (stat)


State 169

   25 __elseif: __elseif ELSEIF exp THEN . block

    $default  reduce using rule 3 (__stat)

    chunk   go to state 41
    __stat  go to state 2
    block   go to state 173


State 170

   16 stat: IF exp THEN block __elseif ELSE block END .

    $default  reduce using rule 16 (stat)


State 171

   17 stat: FOR NAME '=' exp ',' exp DO block . END

    END  shift, and go to state 174


State 172

   18 stat: FOR NAME '=' exp ',' exp ',' exp . DO block END
   79 binopexp: exp . '+' exp
   80         | exp . '-' exp
   81         | exp . '*' exp
   82         | exp . '/' exp
   83         | exp . '^' exp
   84         | exp . '%' exp
   85         | exp . CONCAT exp
   86         | exp . COMP exp
   87         | exp . AND exp
   88         | exp . OR exp

    DO      shift, and go to state 175
    OR      shift, and go to state 78
    AND     shift, and go to state 79
    COMP    shift, and go to state 80
    CONCAT  shift, and go to state 81
    '+'     shift, and go to state 82
    '-'     shift, and go to state 83
    '*'     shift, and go to state 84
    '%'     shift, and go to state 85
    '/'     shift, and go to state 86
    '^'     shift, and go to state 87


State 173

   25 __elseif: __elseif ELSEIF exp THEN block .

    $default  reduce using rule 25 (__elseif)


State 174

   17 stat: FOR NAME '=' exp ',' exp DO block END .

    $default  reduce using rule 17 (stat)


State 175

   18 stat: FOR NAME '=' exp ',' exp ',' exp DO . block END

    $default  reduce using rule 3 (__stat)

    chunk   go to state 41
    __stat  go to state 2
    block   go to state 176


State 176

   18 stat: FOR NAME '=' exp ',' exp ',' exp DO block . END

    END  shift, and go to state 177


State 177

   18 stat: FOR NAME '=' exp ',' exp ',' exp DO block END .

    $default  reduce using rule 18 (stat)
